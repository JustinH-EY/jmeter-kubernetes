<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="amazon" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.4.18. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;89&quot;, &quot;Chromium&quot;;v=&quot;89&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">www.amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">completion.amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">images-na.ssl-images-amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">m.media-amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">aax-us-iad.amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">unagi-na.amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">fls-na.amazon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://amazon.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w%22%2C%22adElementId%22%3A%22ape_Gateway_right-2_desktop_placement%22%2C%22pageType%22%3A%22Gateway%22%2C%22slotName%22%3A%22right-2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221001%22%2C%22adCreativeTemplateName%22%3A%22Image%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQjtogr8V0_uXUeuKYAqrsRAAAAF4hNhPfwEAAAH0AZ6XOpU%22%2C%22adCreativeId%22%3A%2217102192301%22%2C%22adId%22%3A%226083951401%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w&quot;,&quot;adElementId&quot;:&quot;ape_Gateway_right-2_desktop_placement&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;slotName&quot;:&quot;right-2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1001&quot;,&quot;adCreativeTemplateName&quot;:&quot;Image&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qjtogr8V0_uXUeuKYAqrsRAAAAF4hNhPfwEAAAH0AZ6XOpU&quot;,&quot;adCreativeId&quot;:&quot;17102192301&quot;,&quot;adId&quot;:&quot;6083951401&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/counter?ctr=desktop_ajax_atf&amp;exp=1617136591926&amp;rId=N2M3QV24EE498GVZ9XQP&amp;mkId=ATVPDKIKX0DER&amp;h=7fcdd76714e5c7e49202ed2e19d56678dd4f367bb725436f23412745c9f2bf6e" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ctr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctr</stringProp>
                  <stringProp name="Argument.value">desktop_ajax_atf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">7fcdd76714e5c7e49202ed2e19d56678dd4f367bb725436f23412745c9f2bf6e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136591926</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/counter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cross_border_interstitial/render" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;localCountryCode&quot;:&quot;US&quot;,&quot;customerId&quot;:null,&quot;sessionId&quot;:&quot;144-7425314-1966119&quot;,&quot;deviceType&quot;:&quot;DESKTOP&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;url&quot;:&quot;/&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;languageOfPreference&quot;:&quot;en_US&quot;,&quot;weblabTreatmentMap&quot;:{&quot;CROSS_BORDER_INTERSTITIAL_ES_US_340017&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_BUTTON_BACKGROUND_HIGHLIGHT_329086&quot;:&quot;C&quot;,&quot;CROSS_BORDER_INTERSTITIAL_PL_302078&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_MX_US_341718&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_MOBILE_DP_REDIRECTION_336249&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_EG_302080&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_DP_REDIRECTION_320915&quot;:&quot;T1&quot;,&quot;NARX_GOLDBOX_REDIRECTION_319969&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_NL_257355&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_FR_CA_332704&quot;:&quot;C&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cross_border_interstitial/render</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136473299" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136473299</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/overlay/display.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">origSessionId</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                  <stringProp name="Argument.value">/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="referrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">referrer</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isAUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isAUI</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="queryString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">queryString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subPageType</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/overlay/display.html</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w%22%2C%22adElementId%22%3A%22ape_Gateway_desktop-ad-center-1_desktop_placement%22%2C%22pageType%22%3A%22Gateway%22%2C%22slotName%22%3A%22desktop-ad-center-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1001%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQrGJ2rH-orlBukjwTh1PvIcAAAF4hNhPfwEAAAH0AXhEAl4%22%2C%22adCreativeId%22%3A17102165901%2C%22adCreativeTemplateName%22%3A%22Image%22%2C%22adId%22%3A6083951401%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w&quot;,&quot;adElementId&quot;:&quot;ape_Gateway_desktop-ad-center-1_desktop_placement&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;slotName&quot;:&quot;desktop-ad-center-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1001,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QrGJ2rH-orlBukjwTh1PvIcAAAF4hNhPfwEAAAH0AXhEAl4&quot;,&quot;adCreativeId&quot;:17102165901,&quot;adCreativeTemplateName&quot;:&quot;Image&quot;,&quot;adId&quot;:6083951401}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/sessionCacheUpdateHandler.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionCacheUpdateFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sessionCacheUpdateFlag</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">browserHeight</stringProp>
                  <stringProp name="Argument.value">937</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">browserWidth</stringProp>
                  <stringProp name="Argument.value">1903</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">fVoboEDsYMjWCjzTN8sCObLZif2/oaBmQ3S2N5KuRr8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/sessionCacheUpdateHandler.html</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kindle/journeys/NGU1NTBiMmQt/NGU1NTBiMmQt-ZmI0YjQ3ZmUt-w1500._CB657134624_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kindle/journeys/NGU1NTBiMmQt/NGU1NTBiMmQt-ZmI0YjQ3ZmUt-w1500._CB657134624_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/img18/home/journeys/MzY2YzdjNzct/MzY2YzdjNzct-N2E5ZDQwOWMt-w379._SY304_CB657777537_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/img18/home/journeys/MzY2YzdjNzct/MzY2YzdjNzct-N2E5ZDQwOWMt-w379._SY304_CB657777537_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-NGRhYzlmZWQt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-NGRhYzlmZWQt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ZTc3NTQ2ZGMt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ZTc3NTQ2ZGMt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-Njk3NjUwNzUt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-Njk3NjUwNzUt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ODNmNDA2OTAt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ODNmNDA2OTAt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kindle/journeys/ZjMzMTkwMjYt/ZjMzMTkwMjYt-NTNiZWJhNTct-w379._SY304_CB661376892_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kindle/journeys/ZjMzMTkwMjYt/ZjMzMTkwMjYt-NTNiZWJhNTct-w379._SY304_CB661376892_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/MADE_FOR_YOU/SEARCH/madeforyou_Topcard_1x._SY304_CB656886554_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/MADE_FOR_YOU/SEARCH/madeforyou_Topcard_1x._SY304_CB656886554_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZDZlMGY1ZDMt-w186._SY116_CB406101961_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZDZlMGY1ZDMt-w186._SY116_CB406101961_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-Y2JjY2IzMWUt-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-Y2JjY2IzMWUt-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-OThjODQyM2Et-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-OThjODQyM2Et-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZjBmZTdkYTkt-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZjBmZTdkYTkt-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Drop1x._SY116_CB662367672_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Drop1x._SY116_CB662367672_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_MadeForYou_1x._SY116_CB660795608_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_MadeForYou_1x._SY116_CB660795608_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Bond_1x._SY116_CB662367672_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Bond_1x._SY116_CB662367672_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_PW_1x._SY116_CB660795608_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_PW_1x._SY116_CB660795608_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41pqjywIPuL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41pqjywIPuL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/51eZPdpdJVL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51eZPdpdJVL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41dRr2Vp6wL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41dRr2Vp6wL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41dJT0v0ALL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41dJT0v0ALL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/login/fwcim._CB454428048_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31rFieDgRjL.css?AUIClients/DetailPageAllOffersDisplayAssets&amp;VlCqtHx0#333153-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VlCqtHx0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VlCqtHx0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31rFieDgRjL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;loF5DEW0#us.123392-T1.317114-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loF5DEW0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loF5DEW0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01Re6AqkVUL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,01I-WWW2CuL.js,2184GmmGbKL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,312JSfRrqlL.js,31YSI-SWT6L.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,410lRovX8FL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11XkXxlfwyL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;YR7kHPMa#us.229463-T1.312885-T1.195406-C.316933-T1.290748-T1.317011-T1.315969-T1.287015-T2.291749-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.324832-T1.172346-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="YR7kHPMa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">YR7kHPMa</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01Re6AqkVUL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,01I-WWW2CuL.js,2184GmmGbKL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,312JSfRrqlL.js,31YSI-SWT6L.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,410lRovX8FL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11XkXxlfwyL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kitchen/scheduled-delivery/sd_style-ScheduledDeliveryJavascript-v2-b1.0.118.0-min._CB485931710_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kitchen/scheduled-delivery/sd_style-ScheduledDeliveryJavascript-v2-b1.0.118.0-min._CB485931710_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/script-13-min._CB485934002_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/script-13-min._CB485934002_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap_global._CB485967074_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap_global._CB485967074_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js?AUIClients/DetailPageDesktopImageBlockMetaAsset&amp;iG49/WCx#us.336175-T1.169593-T1.299993-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="iG49/WCx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iG49/WCx</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/twister/beta/twister-dpf.87b069b255db02b4805f7e714b617f8f._V1_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/twister/beta/twister-dpf.87b069b255db02b4805f7e714b617f8f._V1_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/nav2/gamma/accessoriesCSS/US/combined-3689044428._CB485918731_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/nav2/gamma/accessoriesCSS/US/combined-3689044428._CB485918731_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01r8lpNJhRL.css?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;C0ycBIP6#us" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="C0ycBIP6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">C0ycBIP6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01r8lpNJhRL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11EIQ5IGqaL._RC%7C01ZTHTZObnL.css,41DO8IyHTdL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css?AUIClients/AmazonUI&amp;sfJoK/cJ#us.not-trident.305299-T1.322290-T1.322288-T1.263677-T2.265810-T2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfJoK/cJ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfJoK/cJ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11EIQ5IGqaL._RC%7C01ZTHTZObnL.css,41DO8IyHTdL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.1._CB485967487_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.1._CB485967487_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41qEDBI4k-L.css?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41qEDBI4k-L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/personalization/yourstore/js/ratings-bar-366177._CB485931229_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/personalization/yourstore/js/ratings-bar-366177._CB485931229_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/311UZ9Ewv%2BL.js?AUIClients/PageRefreshAsset&amp;JL61hJ6+#321884-T1.123392-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="JL61hJ6 " elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">JL61hJ6 </stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/PageRefreshAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/PageRefreshAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/311UZ9Ewv%2BL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,31j4n5vuY7L.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;iZMoQjSe#us.321740-T1.281042-T1.271164-T1.271151-T1.263677-T2.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="iZMoQjSe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iZMoQjSe</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,31j4n5vuY7L.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,31j4n5vuY7L.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01vF6gFybxL.css,31oKeeTQwzL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;iZMoQjSe#us.321740-T1.281042-T1.271164-T1.271151-T1.263677-T2.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="iZMoQjSe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iZMoQjSe</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,31j4n5vuY7L.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01vF6gFybxL.css,31oKeeTQwzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21vjH1nf-eL._RC%7C01Lf88KebEL.css,01Z3lE5tzaL.css,01ng-wbWRnL.css,01+KRP2j52L.css,31rFieDgRjL.css,31Iyqx-VDnL.css,31oKeeTQwzL.css,61H5jM7l4aL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01Qji-D4YPL.css,315GMAwkLiL.css,015NcZpqjOL.css,11kmwdXfY5L.css,11jG57OztzL.css,31v5j8kQd3L.css,01wsp46SQTL.css,011uHgmxBfL.css,01vUDet4b1L.css,01D-B-OeNDL.css,21ZjVyQPjML.css,01xJovNL7KL.css,31HQ7uCUltL.css,21jUQU6VhYL.css,21GWIPOCN2L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css?AUIClients/USAmazonDevicesDetailPageMetaAssets&amp;U1ttkRCh#us.333153-T1.287015-T2.310456-T1.237182-T1.172402-T1.317114-T1.311866-T1.211070-T1.260113-T1.291146-T1.262481-T1.271356-T1.286343-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="U1ttkRCh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">U1ttkRCh</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USAmazonDevicesDetailPageMetaAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USAmazonDevicesDetailPageMetaAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21vjH1nf-eL._RC%7C01Lf88KebEL.css,01Z3lE5tzaL.css,01ng-wbWRnL.css,01+KRP2j52L.css,31rFieDgRjL.css,31Iyqx-VDnL.css,31oKeeTQwzL.css,61H5jM7l4aL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01Qji-D4YPL.css,315GMAwkLiL.css,015NcZpqjOL.css,11kmwdXfY5L.css,11jG57OztzL.css,31v5j8kQd3L.css,01wsp46SQTL.css,011uHgmxBfL.css,01vUDet4b1L.css,01D-B-OeNDL.css,21ZjVyQPjML.css,01xJovNL7KL.css,31HQ7uCUltL.css,21jUQU6VhYL.css,21GWIPOCN2L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31kKc73tPXL.js?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31kKc73tPXL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/nav2/gamma/websiteGridCSS/websiteGridCSS-websiteGridCSS-48346.css._CB485931225_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/nav2/gamma/websiteGridCSS/websiteGridCSS-websiteGridCSS-48346.css._CB485931225_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61wv0qJCUnL.js?AUIClients/DetailPageAllOffersDisplayAssets&amp;5rZ+6Yje#language-en.331965-T1.302352-T1.333153-T1.327966-T1.337680-T1.309776-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="5rZ 6Yje" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5rZ 6Yje</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61wv0qJCUnL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41g1TctCA1L.js?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41g1TctCA1L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01Re6AqkVUL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,2184GmmGbKL.js,31JUr01gz+L.js,01I-WWW2CuL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,312JSfRrqlL.js,31YSI-SWT6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,01t2esUHF0L.js,01ZF+ovNflL.js,21+6n1I3-GL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;wKviA0ob#us.327990-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.316933-T1.290748-T1.317011-T1.315969-T1.312547-T1.287015-T2.239559-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.324832-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="wKviA0ob" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wKviA0ob</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01Re6AqkVUL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,2184GmmGbKL.js,31JUr01gz+L.js,01I-WWW2CuL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,312JSfRrqlL.js,31YSI-SWT6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,01t2esUHF0L.js,01ZF+ovNflL.js,21+6n1I3-GL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01YXz0HO1fL.css?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01YXz0HO1fL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=undefined&amp;prefix=&amp;event=onFocusEmptySearchTerm&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136476019" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onFocusEmptySearchTerm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136476019</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/browser-scripts/fruitCSS/US-secure-combined-11313707._CB485918966_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/browser-scripts/fruitCSS/US-secure-combined-11313707._CB485918966_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/91txxpe1Y-L.js?AUIClients/GestaltDetailPageDesktopMetaAsset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/GestaltDetailPageDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/GestaltDetailPageDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/91txxpe1Y-L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31yoeTcupOL.js?AUIClients/AmazonUICalendar" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31yoeTcupOL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js?AUIClients/AmazonUI&amp;Dj66etiu#319488-T1.309035-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Dj66etiu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Dj66etiu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css?AUIClients/AmazonUICalendar&amp;wmT7unlZ#not-trident" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wmT7unlZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wmT7unlZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js?AUIClients/InstallmentPaymentDetailPageMetaAsset&amp;hrzDuonS#us.336175-T1.215308-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/InstallmentPaymentDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/InstallmentPaymentDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hrzDuonS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrzDuonS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/015NcZpqjOL._RC%7C01IY99sMV0L.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01q5WwgvghL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21l8ikMBSWL.css,210Czw7BAgL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,2178xuWumKL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31HQ7uCUltL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;kGd1pxfP#us.164396-T1.232594-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.237189-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="kGd1pxfP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">kGd1pxfP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/015NcZpqjOL._RC%7C01IY99sMV0L.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01q5WwgvghL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21l8ikMBSWL.css,210Czw7BAgL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,2178xuWumKL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31HQ7uCUltL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61ps9q1dLrL.js,01lcH4zcTaL.js,01OtvpwikQL.js,31-yxBnv3nL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,01t2esUHF0L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,51GlvQZS+bL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;Jb7klD9E#us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.341406-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Jb7klD9E" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Jb7klD9E</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61ps9q1dLrL.js,01lcH4zcTaL.js,01OtvpwikQL.js,31-yxBnv3nL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,01t2esUHF0L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,51GlvQZS+bL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/51zv8e4W3TL._RC%7C015NcZpqjOL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;4DBrSKSS#us.325934-T1.261576-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="4DBrSKSS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">4DBrSKSS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51zv8e4W3TL._RC%7C015NcZpqjOL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,015NcZpqjOL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01q5WwgvghL.css,11iz0Z3rJ7L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21l8ikMBSWL.css,210Czw7BAgL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31gnaffJaOL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;UeAXeM3T#us.263677-T2.232594-T1.287015-T2.310456-T1.237182-T1.172402-T1.317114-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.237189-T1.109378-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="UeAXeM3T" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UeAXeM3T</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,015NcZpqjOL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01q5WwgvghL.css,11iz0Z3rJ7L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21l8ikMBSWL.css,210Czw7BAgL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31gnaffJaOL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/style-4._CB485946758_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/style-4._CB485946758_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/browser-scripts/dpSpritesCSS/US-secure-combined-3520421511._CB485930867_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/browser-scripts/dpSpritesCSS/US-secure-combined-3520421511._CB485930867_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/style-3._CB485933656_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/style-3._CB485933656_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61ps9q1dLrL.js,01lcH4zcTaL.js,01OtvpwikQL.js,31-yxBnv3nL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,01t2esUHF0L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,51GlvQZS+bL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71I7QWHNHkL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;8WxdsUNj#us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.327519-T1.224722-T1.169593-T1.341406-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="8WxdsUNj" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">8WxdsUNj</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61ps9q1dLrL.js,01lcH4zcTaL.js,01OtvpwikQL.js,31-yxBnv3nL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,01t2esUHF0L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,51GlvQZS+bL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71I7QWHNHkL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/cs/projects/text-trace/texttrace_typ._CB485929114_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/cs/projects/text-trace/texttrace_typ._CB485929114_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01Re6AqkVUL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,01t2esUHF0L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;C4jF1nz2#us.320228-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.315969-T1.312547-T1.287015-T2.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="C4jF1nz2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">C4jF1nz2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01Re6AqkVUL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,01t2esUHF0L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41T696fF78L._RC%7C31IE3jRc55L.js,51iYLYat1kL.js,01wFfxST+ZL.js,018-nGQj6aL.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,61wv0qJCUnL.js,216mhluQMRL.js,31NARet8tJL.js,71I7QWHNHkL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,71EA77kZwfL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,21E2aIDj6DL.js,01Re6AqkVUL.js,11+dypSOVUL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01t2esUHF0L.js,61ps9q1dLrL.js,01GhKb2usNL.js,0185ITV0M6L.js,41DfHGdXUeL.js,013eoEBTVUL.js,016QFWAAdML.js,31X6Dg1fL8L.js,11XkXxlfwyL.js,41YD13pEeXL.js,014kCoIHgIL.js,21TMrbNilEL.js,21YblE14ZTL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js?AUIClients/USAmazonDevicesDetailPageMetaAssets&amp;e2eW7H4K#language-en.us.331965-T1.229463-T1.302352-T1.313003-T1.312885-T1.312887-T1.140997-T1.195406-C.333153-T1.327966-T1.337680-T1.309776-T1.315969-T1.287015-T2.123392-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.291146-T1.326363-T1.304598-T1.317281-T1.184660-C.262481-T1.271356-T1.286343-T1.172346-T1.154031-T3.227612-T1.227610-T1.327519-T1.341406-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USAmazonDevicesDetailPageMetaAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USAmazonDevicesDetailPageMetaAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e2eW7H4K" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">e2eW7H4K</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41T696fF78L._RC%7C31IE3jRc55L.js,51iYLYat1kL.js,01wFfxST+ZL.js,018-nGQj6aL.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,61wv0qJCUnL.js,216mhluQMRL.js,31NARet8tJL.js,71I7QWHNHkL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,71EA77kZwfL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,21E2aIDj6DL.js,01Re6AqkVUL.js,11+dypSOVUL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01t2esUHF0L.js,61ps9q1dLrL.js,01GhKb2usNL.js,0185ITV0M6L.js,41DfHGdXUeL.js,013eoEBTVUL.js,016QFWAAdML.js,31X6Dg1fL8L.js,11XkXxlfwyL.js,41YD13pEeXL.js,014kCoIHgIL.js,21TMrbNilEL.js,21YblE14ZTL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.0._CB485968702_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.0._CB485968702_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=69&amp;prefix=cel&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136477516" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136477516</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=76&amp;prefix=cell&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136477684" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">76</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136477684</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=32&amp;prefix=cell+p&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136477899" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell p</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136477899</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=72&amp;prefix=cell+pho&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136478029" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell pho</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136478029</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=69&amp;prefix=cell+phone+&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136478345" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136478345</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=32&amp;prefix=cell+phone+c&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136478486" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136478486</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=65&amp;prefix=cell+phone+cas&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136478794" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone cas</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">65</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136478794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=N2M3QV24EE498GVZ9XQP&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=83&amp;prefix=cell+phone+case&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136478930" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone case</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">83</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136478930</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/record-impressions?c4i=ePm_fHprndBNCwFRGMXxT3Tquvc-92UpIzQbSbJ97ssg04wYCV8epdSwcpZn9__de8Ipn_Zde_gBPeEuX_ja9x4uV_OinJVrUYwXffyy7aYYLRc4PjM2ze6WE7hJODef459IwaoiRxY5mQwtpEKIwcPbJGMwofJm0IdQSj5nLNhIC-2UADtDiIoG3sSKWLkP1tsBHdc1tvnYovjyEySzS0Twghy0lx5B6wqkok0cok4sX8YPhOltZQ&amp;rId=N2M3QV24EE498GVZ9XQP&amp;mkId=ATVPDKIKX0DER&amp;exp=1617136591977&amp;h=54cb007b2fe11d0a5eb66e58c3c2c2f9873bc07d0f46c4f4a512977a8019230c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">54cb007b2fe11d0a5eb66e58c3c2c2f9873bc07d0f46c4f4a512977a8019230c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c4i</stringProp>
                  <stringProp name="Argument.value">ePm_fHprndBNCwFRGMXxT3Tquvc-92UpIzQbSbJ97ssg04wYCV8epdSwcpZn9__de8Ipn_Zde_gBPeEuX_ja9x4uV_OinJVrUYwXffyy7aYYLRc4PjM2ze6WE7hJODef459IwaoiRxY5mQwtpEKIwcPbJGMwofJm0IdQSj5nLNhIC-2UADtDiIoG3sSKWLkP1tsBHdc1tvnYovjyEySzS0Twghy0lx5B6wqkok0cok4sX8YPhOltZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">N2M3QV24EE498GVZ9XQP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136591977</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/record-impressions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;field-keywords=cell+phone+case" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">search-alias=aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="field-keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">field-keywords</stringProp>
                  <stringProp name="Argument.value">cell phone case</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">s/ref=nb_sb_noss_2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">7837.0</stringProp>
              <stringProp name="ConstantTimer.delay">3918.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 7837 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zL3JlZj1uYl9zYl9ub3NzXzI%2FdXJsPXNlYXJjaC1hbGlhcyUzRGFwcyZmaWVsZC1rZXl3b3Jkcz1jZWxsK3Bob25lK2Nhc2U%3D%22%2C%22adElementId%22%3A%22ape_Search_auto-bottom-advertising-0_portal-batch-fast-btf-loom_placement%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-bottom-advertising-0%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQi2I5XX-dyvWBf34U7_C4CoAAAF4hNhuUgEAAAH0AdXzRQ4%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200026886588941%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zL3JlZj1uYl9zYl9ub3NzXzI/dXJsPXNlYXJjaC1hbGlhcyUzRGFwcyZmaWVsZC1rZXl3b3Jkcz1jZWxsK3Bob25lK2Nhc2U=&quot;,&quot;adElementId&quot;:&quot;ape_Search_auto-bottom-advertising-0_portal-batch-fast-btf-loom_placement&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-bottom-advertising-0&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qi2I5XX-dyvWBf34U7_C4CoAAAF4hNhuUgEAAAH0AdXzRQ4&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200026886588941}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=34B1HHNCMYQ3RWF2J5EN&amp;page-type=Search&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136481434" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">34B1HHNCMYQ3RWF2J5EN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136481434</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%223538941250901%22%2C%22adId%22%3A%227579244370201%22%2C%22campaignId%22%3A%229097912190801%22%2C%22adImpressionId%22%3A%22rpFGee2rpTBdm29y8ua2qQ%22%2C%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%7D%2C%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22TetrisCreativeDesktop%22%2C%22pageType%22%3A%22Search%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22slotName%22%3A%22auto-sparkle-hsa-tetris%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;3538941250901&quot;,&quot;adId&quot;:&quot;7579244370201&quot;,&quot;campaignId&quot;:&quot;9097912190801&quot;,&quot;adImpressionId&quot;:&quot;rpFGee2rpTBdm29y8ua2qQ&quot;,&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010},&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;TetrisCreativeDesktop&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;slotName&quot;:&quot;auto-sparkle-hsa-tetris&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%226175624740701%22%2C%22campaignId%22%3A%229097912190801%22%2C%22adImpressionId%22%3A%22%22%2C%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%7D%2C%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22MultiBrandCreativeDesktop%22%2C%22pageType%22%3A%22Search%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22slotName%22%3A%22desktop-hsa-3psl%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;6175624740701&quot;,&quot;campaignId&quot;:&quot;9097912190801&quot;,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010},&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;slotName&quot;:&quot;desktop-hsa-3psl&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://aax-us-iad.amazon.com/e/loi/imp?b=IvwIzjWAM5fsARdqi2MEWKoAAAF4hNhtzgEAAAH2AUa8mpc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b</stringProp>
                  <stringProp name="Argument.value">IvwIzjWAM5fsARdqi2MEWKoAAAF4hNhtzgEAAAH2AUa8mpc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">e/loi/imp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22video_single_product%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22main%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%2C%22adImpressionId%22%3A%22%22%2C%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%22%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;video_single_product&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;main&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?ie=UTF-8&amp;pl=%7B%22adPlacementMetaData%22%3A%7B%22feedbackType%22%3A%22loomSearch%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-left-advertising-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%2217023476601%22%2C%22adCreativeTemplateName%22%3A%22image%22%2C%22adId%22%3A%226353548501%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQqgcbK1HKbq-jXTG5DUaJ44AAAF4hNhuUgEAAAH0AaEYLOI%22%2C%22adProgramId%22%3A%221002%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;feedbackType&quot;:&quot;loomSearch&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-left-advertising-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;17023476601&quot;,&quot;adCreativeTemplateName&quot;:&quot;image&quot;,&quot;adId&quot;:&quot;6353548501&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QqgcbK1HKbq-jXTG5DUaJ44AAAF4hNhuUgEAAAH0AaEYLOI&quot;,&quot;adProgramId&quot;:&quot;1002&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?ie=UTF-8&amp;pl=%7B%22adPlacementMetaData%22%3A%7B%22feedbackType%22%3A%22loomSearch%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-left-advertising-2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%22undefined%22%2C%22adCreativeTemplateName%22%3A%22dynamicecommercesdciusdesktop%22%2C%22adId%22%3A%22200038813337541%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQosLI7bo8DaXnxBFNcrwdy8AAAF4hNhuUgEAAAH0AW5LxsA%22%2C%22adProgramId%22%3A%221027%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;feedbackType&quot;:&quot;loomSearch&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-left-advertising-2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;undefined&quot;,&quot;adCreativeTemplateName&quot;:&quot;dynamicecommercesdciusdesktop&quot;,&quot;adId&quot;:&quot;200038813337541&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QosLI7bo8DaXnxBFNcrwdy8AAAF4hNhuUgEAAAH0AW5LxsA&quot;,&quot;adProgramId&quot;:&quot;1027&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/sponsored-products/logging/log-action.html?qualifier=1617136479&amp;id=145236503266316&amp;widgetName=sp_atf&amp;adId=200056980247641&amp;eventType=1&amp;adIndex=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widgetName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">widgetName</stringProp>
                  <stringProp name="Argument.value">sp_atf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="adId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adId</stringProp>
                  <stringProp name="Argument.value">200056980247641</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="adIndex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adIndex</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="qualifier" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qualifier</stringProp>
                  <stringProp name="Argument.value">1617136479</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">145236503266316</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eventType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eventType</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/sponsored-products/logging/log-action.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/meritcase-Waterproof-Protector-Fingerprint-Shockproof/dp/B08VGGC444/ref=sr_1_2?dchild=1&amp;keywords=cell+phone+case&amp;qid=1617136479&amp;sr=8-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dchild" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dchild</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">keywords</stringProp>
                  <stringProp name="Argument.value">cell phone case</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="qid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qid</stringProp>
                  <stringProp name="Argument.value">1617136479</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">8-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">meritcase-Waterproof-Protector-Fingerprint-Shockproof/dp/B08VGGC444/ref=sr_1_2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">9826.0</stringProp>
              <stringProp name="ConstantTimer.delay">4913</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 9826 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/du/bbop-ms3-ajax-endpoint.html?ASIN=B08VGGC444&amp;merchantID=AYI5CB742ZI8N&amp;bbopruleID=Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible&amp;sbbopruleID=Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible&amp;deliveryOptions=%5B%5D&amp;preorder=false&amp;releaseDateDeliveryEligible=false&amp;deliveryCountryCode=US" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="deliveryCountryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">deliveryCountryCode</stringProp>
                  <stringProp name="Argument.value">US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="merchantID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">merchantID</stringProp>
                  <stringProp name="Argument.value">AYI5CB742ZI8N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">B08VGGC444</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="releaseDateDeliveryEligible" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">releaseDateDeliveryEligible</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="deliveryOptions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">deliveryOptions</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="preorder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preorder</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bbopruleID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bbopruleID</stringProp>
                  <stringProp name="Argument.value">Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sbbopruleID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sbbopruleID</stringProp>
                  <stringProp name="Argument.value">Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/du/bbop-ms3-ajax-endpoint.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ%2FcmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI%3D%22%2C%22adElementId%22%3A%22ape_Detail_hero-quick-promo_Desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22hero-quick-promo%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221002%22%2C%22adCreativeTemplateName%22%3A%22Responsive%20eCommerce%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQhTjfY1i_bg0QzesoTBm8XEAAAF4hNiToAEAAAH0AXdEdlo%22%2C%22adCreativeId%22%3A%2217100608401%22%2C%22adId%22%3A%226385591101%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ/cmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_hero-quick-promo_Desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;hero-quick-promo&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1002&quot;,&quot;adCreativeTemplateName&quot;:&quot;Responsive eCommerce&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QhTjfY1i_bg0QzesoTBm8XEAAAF4hNiToAEAAAH0AXdEdlo&quot;,&quot;adCreativeId&quot;:&quot;17100608401&quot;,&quot;adId&quot;:&quot;6385591101&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ%2FcmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI%3D%22%2C%22adElementId%22%3A%22ape_Detail_ams-detail-right-v2_desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22ams-detail-right-v2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQqZlTfJi7pUtCeWh3gy-ix4AAAF4hNiToAEAAAH0AQF-5Jw%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200053127638511%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ/cmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ams-detail-right-v2_desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ams-detail-right-v2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QqZlTfJi7pUtCeWh3gy-ix4AAAF4hNiToAEAAAH0AQF-5Jw&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200053127638511}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/prime/pipeline/membersignup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ingressId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ingressId</stringProp>
                  <stringProp name="Argument.value">BBOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">primeAcquisition</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirectURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirectURL</stringProp>
                  <stringProp name="Argument.value">https://www.amazon.com/meritcase-Waterproof-Protector-Fingerprint-Shockproof/dp/B08VGGC444/ref=sr_1_2?dchild=1&amp;keywords=cell+phone+case&amp;qid=1617136479&amp;sr=8-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="disableCSM" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">disableCSM</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="primeCampaignId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">primeCampaignId</stringProp>
                  <stringProp name="Argument.value">primeAcquisition_BBOP_desktop_ft</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/prime/pipeline/membersignup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22desktopFooter%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22desktop-arbies%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22U0VBUkNIX0tFWVdPUkRT%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%2C%22adImpressionId%22%3A%22%22%2C%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%22%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;desktopFooter&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;desktop-arbies&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;U0VBUkNIX0tFWVdPUkRT&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ%2FcmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI%3D%22%2C%22adElementId%22%3A%22ape_Detail_desktop-detail-ilm_desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22desktop-detail-ilm%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221002%22%2C%22adCreativeTemplateName%22%3A%22Responsive%20eCommerce%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQgdjVJGEKzkgmCtzGFu-oe8AAAF4hNiToAEAAAH0Aem3BrA%22%2C%22adCreativeId%22%3A%2217163085301%22%2C%22adId%22%3A%226404755101%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ/cmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_desktop-detail-ilm_desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;desktop-detail-ilm&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1002&quot;,&quot;adCreativeTemplateName&quot;:&quot;Responsive eCommerce&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QgdjVJGEKzkgmCtzGFu-oe8AAAF4hNiToAEAAAH0Aem3BrA&quot;,&quot;adCreativeId&quot;:&quot;17163085301&quot;,&quot;adId&quot;:&quot;6404755101&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ%2FcmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI%3D%22%2C%22adElementId%22%3A%22ape_Detail_dp-ads-center-promo_Desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22dp-ads-center-promo%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQm0IhJOBcvcamo0FDUVXbxUAAAF4hNiToAEAAAH0ASVHFq4%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200030009285321%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ/cmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_dp-ads-center-promo_Desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;dp-ads-center-promo&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qm0IhJOBcvcamo0FDUVXbxUAAAF4hNiToAEAAAH0ASVHFq4&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200030009285321}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cDovL2hwLXJldmlld3NtZWRsZXktbmEtMWQuaWFkLmFtYXpvbi5jb206ODA4MC9XRUItSU5GL3ZpZXdzL21lZGxleUFkYXB0aXZlQWRQYWdlVmlldy5qc3A%2FP3JlZiU1Rj1zciU1RjElNUYyJmRjaGlsZD0xJmtleXdvcmRzPWNlbGwlMjBwaG9uZSUyMGNhc2UmcWlkPTE2MTcxMzY0Nzkmc3I9OC0y%22%2C%22adElementId%22%3A%22ape_Detail_customer-reviews-top_Glance_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22customer-reviews-top%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1024%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQgZI0qz88hHScWUQLIZ1TysAAAF4hNiToAEAAAH0AWQeC_I%22%2C%22adCreativeId%22%3A-1924146692%2C%22adId%22%3A200063913268511%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cDovL2hwLXJldmlld3NtZWRsZXktbmEtMWQuaWFkLmFtYXpvbi5jb206ODA4MC9XRUItSU5GL3ZpZXdzL21lZGxleUFkYXB0aXZlQWRQYWdlVmlldy5qc3A/P3JlZiU1Rj1zciU1RjElNUYyJmRjaGlsZD0xJmtleXdvcmRzPWNlbGwlMjBwaG9uZSUyMGNhc2UmcWlkPTE2MTcxMzY0Nzkmc3I9OC0y&quot;,&quot;adElementId&quot;:&quot;ape_Detail_customer-reviews-top_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;customer-reviews-top&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1024,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QgZI0qz88hHScWUQLIZ1TysAAAF4hNiToAEAAAH0AWQeC_I&quot;,&quot;adCreativeId&quot;:-1924146692,&quot;adId&quot;:200063913268511}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBjYXNl%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ%2FcmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI%3D%22%2C%22adElementId%22%3A%22ape_Detail_ad-endcap-1_Glance_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22ad-endcap-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1024%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQhCP5nMBGWoGuJxw6FSdjdQAAAF4hNiToAEAAAH0AXWvgDI%22%2C%22adCreativeId%22%3A-1194703368%2C%22adId%22%3A200060202854481%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBjYXNl&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwOFZHR0M0NDQ/cmVmJTVGPXNyJTVGMSU1RjImZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwY2FzZSZxaWQ9MTYxNzEzNjQ3OSZzcj04LTI=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ad-endcap-1_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ad-endcap-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1024,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QhCP5nMBGWoGuJxw6FSdjdQAAAF4hNiToAEAAAH0AXWvgDI&quot;,&quot;adCreativeId&quot;:-1194703368,&quot;adId&quot;:200060202854481}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://unagi-na.amazon.com/1/events/com.amazon.eel.SponsoredProductsEventTracking.prod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200060202854481&quot;,&quot;adIndex&quot;:&quot;0&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200063913268511&quot;,&quot;adIndex&quot;:&quot;1&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200055222789561&quot;,&quot;adIndex&quot;:&quot;2&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200061145517231&quot;,&quot;adIndex&quot;:&quot;3&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200043587480351&quot;,&quot;adIndex&quot;:&quot;4&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200055651236971&quot;,&quot;adIndex&quot;:&quot;5&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200055877207541&quot;,&quot;adIndex&quot;:&quot;6&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200057693374521&quot;,&quot;adIndex&quot;:&quot;7&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200056065079461&quot;,&quot;adIndex&quot;:&quot;8&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;4202063867459712&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200039743989661&quot;,&quot;adIndex&quot;:&quot;9&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200060202854481&quot;,&quot;adIndex&quot;:&quot;0&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200043587480351&quot;,&quot;adIndex&quot;:&quot;1&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200056782197541&quot;,&quot;adIndex&quot;:&quot;2&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200063913268511&quot;,&quot;adIndex&quot;:&quot;3&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200055013054521&quot;,&quot;adIndex&quot;:&quot;4&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200061145517231&quot;,&quot;adIndex&quot;:&quot;5&quot;,&quot;eventType&quot;:&quot;2&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/events/com.amazon.eel.SponsoredProductsEventTracking.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://unagi-na.amazon.com/1/events/com.amazon.eel.SponsoredProductsEventTracking.prod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200039743989661&quot;,&quot;adIndex&quot;:&quot;6&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200055222789561&quot;,&quot;adIndex&quot;:&quot;7&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200063072287781&quot;,&quot;adIndex&quot;:&quot;8&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136489&quot;,&quot;id&quot;:&quot;1773888583240236&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200036494969561&quot;,&quot;adIndex&quot;:&quot;9&quot;,&quot;eventType&quot;:&quot;2&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/events/com.amazon.eel.SponsoredProductsEventTracking.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7B4JVVJ5Z67FVD9N3YMD&amp;page-type=Detail&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136492750" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Detail</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7B4JVVJ5Z67FVD9N3YMD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136492750</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/customer-reviews/aj/private/reviewsGallery/get-image-gallery-assets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/customer-reviews/aj/private/reviewsGallery/get-image-gallery-assets</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/customer-reviews/aj/private/reviewsGallery/get-application-resources-for-reviews-gallery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="noCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">noCache</stringProp>
                  <stringProp name="Argument.value">1617136493143</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/customer-reviews/aj/private/reviewsGallery/get-application-resources-for-reviews-gallery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://fls-na.amazon.com/1/batch/1/OE/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;7B4JVVJ5Z67FVD9N3YMD&quot;,&quot;sid&quot;:&quot;144-7425314-1966119&quot;,&quot;mid&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;sn&quot;:&quot;www.amazon.com&quot;,&quot;reqs&quot;:[{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;baselineCounter2&quot;,&quot;value&quot;:1,&quot;t&quot;:1}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nexusBaselineCounter&quot;,&quot;value&quot;:1,&quot;t&quot;:1}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:hiResDesktop&quot;,&quot;value&quot;:0,&quot;t&quot;:20}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:pagejs:pkgExecTime&quot;,&quot;value&quot;:2.9200000026321504,&quot;t&quot;:21}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;csm.cookieSize&quot;,&quot;value&quot;:426,&quot;t&quot;:153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:211}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:211}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:sfversion:1.50.71857ba&quot;,&quot;value&quot;:1,&quot;t&quot;:250}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:0,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:0,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:251}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;OIG.csm.common.rendered&quot;,&quot;value&quot;:1,&quot;t&quot;:538}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:0,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:0,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:582}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:584}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:584}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;productOverviewDesktopRendered&quot;,&quot;value&quot;:1,&quot;t&quot;:649}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:0,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:0,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:763}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:765}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:765}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp_aib_centerCol_height&quot;,&quot;value&quot;:908,&quot;t&quot;:767}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:770}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:770}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:770}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:770}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:1,&quot;t&quot;:788}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:2,&quot;t&quot;:788}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:3,&quot;t&quot;:789}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:4,&quot;t&quot;:789}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:5,&quot;t&quot;:790}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:6,&quot;t&quot;:791}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:7,&quot;t&quot;:791}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:8,&quot;t&quot;:792}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:9,&quot;t&quot;:792}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:10,&quot;t&quot;:792}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:11,&quot;t&quot;:793}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPIBBTFRegisterTime&quot;,&quot;value&quot;:1099,&quot;t&quot;:825}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:869}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:869}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetLeft:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:747,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetLeft:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:747,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetTop:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1154,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetTop:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1154,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetWidth:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:650,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetWidth:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:650,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetHeight:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:130,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetHeight:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:130,&quot;t&quot;:871}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:872}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:872}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:873}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:873}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:874}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:874}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:12,&quot;t&quot;:893}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPAiryDownloadStartTime&quot;,&quot;value&quot;:1169,&quot;t&quot;:895}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:13,&quot;t&quot;:895}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;BuyBoxTabularLayoutDesktopDisplayed&quot;,&quot;value&quot;:1,&quot;t&quot;:934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickPreventMultiClickModuleCalled&quot;,&quot;value&quot;:1,&quot;t&quot;:936}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QuantitySelector-TimeTo-JSReady&quot;,&quot;value&quot;:959,&quot;t&quot;:959}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QuantitySelector-TimeTo-JSReadyHundredths&quot;,&quot;value&quot;:95,&quot;t&quot;:959}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:961}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:961}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:961}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:961}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:962}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:962}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:965}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:965}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:965}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:965}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:968}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:968}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:987}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:987}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:987}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:987}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dyr_web_ingress_hidden&quot;,&quot;value&quot;:1,&quot;t&quot;:1010}},{&quot;csmcount&quot;:{&quot;value&quot;:1,&quot;t&quot;:1015}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;customerReviewsAttributeDesktopRender&quot;,&quot;value&quot;:1,&quot;t&quot;:1015}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;uss:compatibleBrowser&quot;,&quot;value&quot;:1,&quot;t&quot;:1022}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1034}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1034}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1038}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1038}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPLandingImageHighResDownloadTime&quot;,&quot;value&quot;:1320.7949999996345,&quot;t&quot;:1046}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;image_size_bucket:0-50&quot;,&quot;value&quot;:1,&quot;t&quot;:1050}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;altImageCount&quot;,&quot;value&quot;:8,&quot;t&quot;:1050}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;MagnifierImageDownload&quot;,&quot;value&quot;:1340.7999999981257,&quot;t&quot;:1066}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcc_altThumbs_7&quot;,&quot;value&quot;:1,&quot;t&quot;:1069}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCFatcTTI&quot;,&quot;value&quot;:823,&quot;t&quot;:1071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCFimageblockTTI&quot;,&quot;value&quot;:1343,&quot;t&quot;:1071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1160}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1160}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1174}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1174}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1217}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1217}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1231}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1231}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1231}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1231}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1233}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1233}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1233}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1233}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:14,&quot;t&quot;:1843}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:15,&quot;t&quot;:1845}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:0,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:0,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:2012}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:16,&quot;t&quot;:2013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:0,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:0,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:2030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:17,&quot;t&quot;:2061}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:0,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:0,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DetailPageMetaAssetFixed.duration&quot;,&quot;value&quot;:63.02499999947031,&quot;t&quot;:2084}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DetailPageMetaAssetFixed.startTime&quot;,&quot;value&quot;:172.4949999988894,&quot;t&quot;:2084}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetFixed.duration&quot;,&quot;value&quot;:86.96499999859952,&quot;t&quot;:2089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetFixed.startTime&quot;,&quot;value&quot;:172.82999999952153,&quot;t&quot;:2089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn.duration&quot;,&quot;value&quot;:53.214999999909196,&quot;t&quot;:2100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn.startTime&quot;,&quot;value&quot;:283.43999999924563,&quot;t&quot;:2100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.duration&quot;,&quot;value&quot;:63.93500000194763,&quot;t&quot;:2117}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.startTime&quot;,&quot;value&quot;:172.19999999724678,&quot;t&quot;:2117}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:1,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:2,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:3,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:4,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:5,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:6,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:7,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:8,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:9,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:10,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:11,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:12,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:13,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:14,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:15,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:16,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:17,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:18,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:19,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:20,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:21,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:22,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:23,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:24,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:25,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:26,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:27,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2152}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2154}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2154}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAssetTrigger&quot;,&quot;value&quot;:1,&quot;t&quot;:2154}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxBTFSize&quot;,&quot;value&quot;:178,&quot;t&quot;:2154}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxATFSize&quot;,&quot;value&quot;:190,&quot;t&quot;:2154}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxBTFSize&quot;,&quot;value&quot;:178,&quot;t&quot;:2157}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2157}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2157}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2159}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2159}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2159}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2159}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2160}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2160}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:18,&quot;t&quot;:2160}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2161}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2161}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2162}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2162}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:19,&quot;t&quot;:2163}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageReady&quot;,&quot;value&quot;:2163,&quot;t&quot;:2163}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickDesktopAddToCartButtonPresent&quot;,&quot;value&quot;:1,&quot;t&quot;:2176}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickDesktopBuyNowButtonPresent&quot;,&quot;value&quot;:1,&quot;t&quot;:2177}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAddressSelectorIndex0&quot;,&quot;value&quot;:1,&quot;t&quot;:2183}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAddressSelectorIndex0_time&quot;,&quot;value&quot;:2183,&quot;t&quot;:2183}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageStates&quot;,&quot;value&quot;:1,&quot;t&quot;:2184}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageStates_time&quot;,&quot;value&quot;:2184,&quot;t&quot;:2184}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutProductStates&quot;,&quot;value&quot;:1,&quot;t&quot;:2184}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutProductStates_time&quot;,&quot;value&quot;:2184,&quot;t&quot;:2184}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutBuyNowButtonBound&quot;,&quot;value&quot;:1,&quot;t&quot;:2186}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutBuyNowButtonBound_time&quot;,&quot;value&quot;:2186,&quot;t&quot;:2186}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutControllerPageLoaded&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutControllerPageLoaded_time&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time.wl:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time.wl:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time.wl:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2189,&quot;t&quot;:2189}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes&quot;,&quot;value&quot;:1,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time&quot;,&quot;value&quot;:2193,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time.wl:T2&quot;,&quot;value&quot;:2193,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2193,&quot;t&quot;:2193}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;totalImages&quot;,&quot;value&quot;:85,&quot;t&quot;:2202}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;page module&quot;,&quot;t&quot;:2203}},{&quot;cel&quot;:{&quot;k&quot;:&quot;pmd&quot;,&quot;o&quot;:&quot;https://www.amazon.com&quot;,&quot;p&quot;:&quot;/meritcase-Waterproof-Protector-Fingerprint-Shockproof/dp/B08VGGC444/ref=sr_1_2&quot;,&quot;t&quot;:2203}},{&quot;cel&quot;:{&quot;w&quot;:1920,&quot;aw&quot;:1920,&quot;h&quot;:1080,&quot;ah&quot;:1040,&quot;cd&quot;:24,&quot;pd&quot;:24,&quot;t&quot;:2203,&quot;k&quot;:&quot;sci&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1912,&quot;h&quot;:11006,&quot;t&quot;:2203,&quot;k&quot;:&quot;doi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;page module&quot;,&quot;t&quot;:2203}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;viewport module&quot;,&quot;t&quot;:2203}},{&quot;cel&quot;:{&quot;w&quot;:1920,&quot;h&quot;:937,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:2203,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;viewport module&quot;,&quot;t&quot;:2203}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;features module&quot;,&quot;t&quot;:2204}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;features module&quot;,&quot;t&quot;:2204}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;mouse click module&quot;,&quot;t&quot;:2204}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;mouse click module&quot;,&quot;t&quot;:2204}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;mouse move module&quot;,&quot;t&quot;:2204}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;mouse move module&quot;,&quot;t&quot;:2204}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:csm.CSMBaselineEvent.4&quot;,&quot;value&quot;:1,&quot;t&quot;:2204}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2394}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2394}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2395}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2396}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2396}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2398}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2398}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1&quot;,&quot;value&quot;:1,&quot;t&quot;:2464}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1:tabular-buybox-truncate-0&quot;,&quot;value&quot;:1,&quot;t&quot;:2464}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:comparison.dpTableImpression.1&quot;,&quot;value&quot;:1,&quot;t&quot;:2630}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;tradeIn_widgetContextMissing&quot;,&quot;value&quot;:1,&quot;t&quot;:2637}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;tradeIn_widgetContextMissing&quot;,&quot;value&quot;:2,&quot;t&quot;:2646}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;CustomerReviews:LazyWidgetTrigger&quot;,&quot;value&quot;:0,&quot;t&quot;:2649}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;sp_detail.adb&quot;,&quot;value&quot;:1,&quot;t&quot;:2656}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;sp_detail2.adb&quot;,&quot;value&quot;:1,&quot;t&quot;:2657}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:1,&quot;t&quot;:2658}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:2,&quot;t&quot;:2662}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:3,&quot;t&quot;:2662}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:4,&quot;t&quot;:2662}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:5,&quot;t&quot;:2663}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:6,&quot;t&quot;:2663}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:7,&quot;t&quot;:2664}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:8,&quot;t&quot;:2665}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:9,&quot;t&quot;:2665}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:10,&quot;t&quot;:2666}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:1,&quot;t&quot;:2667}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:2,&quot;t&quot;:2668}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:3,&quot;t&quot;:2669}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:4,&quot;t&quot;:2670}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2674}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2675}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2675}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2721}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2722}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2726}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2726}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2728}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2728}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2730}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2730}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2732}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2732}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2732}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2732}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2733}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2733}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2736}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2736}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2737}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2737}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2737}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2737}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2738}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2738}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2738}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2738}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2740}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2740}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2742}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2742}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2847}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2847}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2850}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2850}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:5,&quot;t&quot;:2850}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:6,&quot;t&quot;:2852}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:7,&quot;t&quot;:2853}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:8,&quot;t&quot;:2856}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:9,&quot;t&quot;:2860}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:10,&quot;t&quot;:2861}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2884}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2884}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1&quot;,&quot;value&quot;:2,&quot;t&quot;:2889}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1:tabular-buybox-truncate-1&quot;,&quot;value&quot;:1,&quot;t&quot;:2889}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2890}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2890}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2935}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2935}},{&quot;cel&quot;:{&quot;w&quot;:1912,&quot;h&quot;:11109,&quot;t&quot;:3004,&quot;k&quot;:&quot;doi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3008}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3008}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3009}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3009}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3011}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3011}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_amzn:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_amzn:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3013}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Viewabilities.4&quot;,&quot;value&quot;:1,&quot;t&quot;:3043}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_amzn:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_amzn:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:loaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:loaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3044}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3046}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3046}},{&quot;navigation&quot;:{&quot;quirks&quot;:0}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:CSM:Latency:PreloadSprite:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3069}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_bestsellers_22595f4f23134e4aa687cca616dd2701&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_gb_8b76f3deb4464058af8eb975e65f885d&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_primelink_nonmember_8493a4e26fe645e39b392d27f8327e9c&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_customerservice_74bebff5eab64735882e87c98f865eb7&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_newreleases_524cc40c03954987aed60c546996105e&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_books_788dc1d04dfe44a2b3249e7a7c245230&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_fashion_dd35c91e68cd43a889bbbb227e6295b8&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_kindle_books_6395eddc526040139c7ee602774c5efd&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_gc_48b1fd0bb4a14f06a105c7a095311e83&quot;,&quot;value&quot;:1,&quot;t&quot;:3070}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_toys_7ae6208bf21c4a59b9006b1891f7d18a&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_home_79f3fa5ce5d64264879d22257c8fffd0&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_giftfinder_797116a77f3e41e9b8bf175add187a06&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_pc_a688c2995a024557843f3f75d99473ca&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_pharmacy_5cb98718aca04923b39e03a1e97f0e41&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_sell_a442dc5834174a7685307217f8a2ee0b&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_registry_63fbadf847fd4d7c93b19910a311037b&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_video_games_ffac2869018f4f209a3a9eb8a9d3c1da&quot;,&quot;value&quot;:1,&quot;t&quot;:3071}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-prime-attach-latency&quot;,&quot;value&quot;:2874,&quot;t&quot;:3076}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-accountList-attach-latency&quot;,&quot;value&quot;:2876,&quot;t&quot;:3078}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-groceries-attach-latency&quot;,&quot;value&quot;:2878,&quot;t&quot;:3080}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-transientFlyout-attach-latency&quot;,&quot;value&quot;:2880,&quot;t&quot;:3082}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-fresh-attach-latency&quot;,&quot;value&quot;:2881,&quot;t&quot;:3083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abAcquisition-attach-latency&quot;,&quot;value&quot;:2882,&quot;t&quot;:3084}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abActivation-attach-latency&quot;,&quot;value&quot;:2882,&quot;t&quot;:3084}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abAccountLink-attach-latency&quot;,&quot;value&quot;:2883,&quot;t&quot;:3085}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-ewc-show&quot;,&quot;value&quot;:1,&quot;t&quot;:3090}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-ewc-detail-show&quot;,&quot;value&quot;:1,&quot;t&quot;:3090}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3164}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3183}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:ajax:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3183}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-api-v2:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3188}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgRequestFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3201}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgEventFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3201}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-batchSuccess&quot;,&quot;value&quot;:16,&quot;t&quot;:3201}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgRequestFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3208}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgEventFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3208}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-batchSuccess&quot;,&quot;value&quot;:4,&quot;t&quot;:3208}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:3684,&quot;t&quot;:3282}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;snsBuyBoxNotVisibleOnDetailPage&quot;,&quot;value&quot;:1,&quot;t&quot;:3287}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:ATF:desktop&quot;,&quot;value&quot;:183,&quot;t&quot;:3302}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:CF:desktop&quot;,&quot;value&quot;:184,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:PageLoaded:desktop&quot;,&quot;value&quot;:185,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TotalCallCount:PageLoaded:desktop&quot;,&quot;value&quot;:1257,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:network:D:desktop&quot;,&quot;value&quot;:118,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:navFirstPaint:D:desktop&quot;,&quot;value&quot;:311,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavStart:C:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:D:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:C:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:D:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:C:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:C:desktop&quot;,&quot;value&quot;:157,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:C:desktop&quot;,&quot;value&quot;:158,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:C:desktop&quot;,&quot;value&quot;:158,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:D:desktop&quot;,&quot;value&quot;:12,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:C:desktop&quot;,&quot;value&quot;:187,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:D:desktop&quot;,&quot;value&quot;:5,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:C:desktop&quot;,&quot;value&quot;:192,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:C:desktop&quot;,&quot;value&quot;:193,&quot;t&quot;:3303}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:D:desktop&quot;,&quot;value&quot;:5,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:C:desktop&quot;,&quot;value&quot;:198,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:C:desktop&quot;,&quot;value&quot;:198,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Subnav:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Subnav:C:desktop&quot;,&quot;value&quot;:199,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:D:desktop&quot;,&quot;value&quot;:42,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:C:desktop&quot;,&quot;value&quot;:200,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:D:desktop&quot;,&quot;value&quot;:200,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:C:desktop&quot;,&quot;value&quot;:200,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:D:desktop&quot;,&quot;value&quot;:200,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:C:desktop&quot;,&quot;value&quot;:200,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:D:desktop&quot;,&quot;value&quot;:202,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:C:desktop&quot;,&quot;value&quot;:202,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-attach-latency&quot;,&quot;value&quot;:3102,&quot;t&quot;:3304}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-footer-flyout-attach-latency&quot;,&quot;value&quot;:3104,&quot;t&quot;:3306}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:ajax:success&quot;,&quot;value&quot;:1,&quot;t&quot;:3324}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:aui-supported-rupee&quot;,&quot;value&quot;:1,&quot;t&quot;:3371}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.auiDuration&quot;,&quot;value&quot;:72.72999999986496,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.auiStartTime&quot;,&quot;value&quot;:172.63499999899068,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.dpStartTimeMin&quot;,&quot;value&quot;:172.4949999988894,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.dpStartTimeMax&quot;,&quot;value&quot;:284.00499999770545,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.auiDiffMin&quot;,&quot;value&quot;:-0.14000000010128133,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.auiDiffMax&quot;,&quot;value&quot;:111.36999999871477,&quot;t&quot;:3373}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPEncodedSize&quot;,&quot;value&quot;:238,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPDecodedSize&quot;,&quot;value&quot;:1042,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedUSHardlinesDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedDetailPageDesktopImageBlockMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedUSHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn1&quot;,&quot;value&quot;:1,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedInstallmentPaymentDetailPageMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3374}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedPageRefreshAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUICalendar1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedUSHardlinesDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedUSHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageAllOffersDisplayAssets1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageDesktopTwisterMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUI1&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUI2&quot;,&quot;value&quot;:1,&quot;t&quot;:3375}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSEncodeSize&quot;,&quot;value&quot;:452,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSDecodeSize&quot;,&quot;value&quot;:1776,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSEncodeSize&quot;,&quot;value&quot;:97,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSDecodeSize&quot;,&quot;value&quot;:539,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;AUICSSEncodeSize&quot;,&quot;value&quot;:28,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;AUICSSDecodeSize&quot;,&quot;value&quot;:172,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSResourceCount&quot;,&quot;value&quot;:6,&quot;t&quot;:3376}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSResourceCount&quot;,&quot;value&quot;:5,&quot;t&quot;:3376}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-navbar&quot;,&quot;w&quot;:1903,&quot;h&quot;:132,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;nav-sprite-v1 celwidget nav-bluebeacon nav-a11y-t1 bold-focus-hover layout2 nav-flex layout3 layout3-alt nav-fresh nav-packard-glow hamburger nav-progressive-attribute&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-atf_ad-placements-desktop-ilm-ct_amazon_us_Detail_desktop_desktop-detail-ilm_1002&quot;,&quot;w&quot;:1500,&quot;h&quot;:55,&quot;d&quot;:0,&quot;x&quot;:201.5,&quot;y&quot;:132,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-dQXQP pf_rd_p-142574a6-fe9d-4026-b292-2b10f27a3071 pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-6e04bd50-155c-44d6-81be-0357d0f5a62d pd_rd_wg-WNaoa&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:desktop-detail-ilm:desktop&quot;,&quot;w&quot;:1920,&quot;h&quot;:55,&quot;d&quot;:0,&quot;x&quot;:-8.5,&quot;y&quot;:132,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;orderInformationGroup&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;companyCompliancePolicies_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;attachAccessoryModal_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tellAFriendBox_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;trustBadge_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_buybox&quot;,&quot;w&quot;:244,&quot;h&quot;:854.21875,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;qualifiedBuybox&quot;,&quot;w&quot;:244,&quot;h&quot;:854.21875,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;booksHeaderInfoContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:244,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;priceInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:244,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_qualifiedBuyBox&quot;,&quot;w&quot;:206,&quot;h&quot;:740.21875,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;booksAdditionalPriceInfoContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;invitePlatform_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pointsInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;agsShippingAndIfdInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;shippingMessageInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:272,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-anchorText-pc&quot;,&quot;w&quot;:100.109375,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1472.453125,&quot;y&quot;:313,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-popover-pc&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;couponsInBuybox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:344,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryBlockContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:182,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:344,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryBlock_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:152,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:344,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cipInsideDeliveryBlock_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:508,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryPromiseInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePropT1_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:20,&quot;t&quot;:3513}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deepCheckPromiseInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promiseBasedBadgeInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promoPriceBlockMessage_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addOnMessage_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;availabilityInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:538,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreBadgePopoverInsideBuybox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:574,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityRelocate_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:22.453125,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:574,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;soldByThirdPartyRelocate_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:608.453125,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToCart_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:31,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:608.453125,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;buyNow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:31,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:647.453125,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:21.453125,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:690.453125,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:206,&quot;h&quot;:21.453125,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:690.453125,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section a-spacing-small a-text-left celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction-celwidget-popover-inner&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tabular_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:38,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:719.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sellerCertifications_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePropT2_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;hbaLabel_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tradeInInstantSavings_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityLayoutHigh_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bbop_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:198.3125,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:769.90625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;voltageCompliance_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;businessPricing_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;soldByThirdParty_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;scheduledDelivery_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bbg_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;mbb_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_productInsurance_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityLayoutLow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;simpleBundleV2_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;asg_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToCart_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;preAddToCartFramework_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;buyNow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;oneClick_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;detailPageGifting_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:40,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:972.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;makoPreRegistration&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;accessoryUpsellAmabot_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;accessoryUpsellBtf_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;unifiedLocation_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;digitalDashHighProminence_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;marsAccessoryUpsell_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToWishlist_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:44,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToRegistry_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1068.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;digitalDashLowProminence_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1458.5,&quot;y&quot;:1068.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;olpLinkWidget_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tellAFriendBox_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:19,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tell-a-friend-desktop&quot;,&quot;w&quot;:244,&quot;h&quot;:19,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;almMultiOfferEgress_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;redirection_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;crossBorderWidget_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tradeInButton_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;moreBuyingChoices_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:71,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1128.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;product-ads-feedback_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amsDetailRight_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:264,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:ams-detail-right-v2:desktop&quot;,&quot;w&quot;:244,&quot;h&quot;:264,&quot;d&quot;:0,&quot;x&quot;:1439.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;imageBlock_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:480,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;spin360_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:731,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smileCodeIngress_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:731,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;energyEfficiency_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:731,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;title_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:128,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:229,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bylineInfo_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:357,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;averageCustomerReviews_feature_div&quot;,&quot;w&quot;:190.03125,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:377,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask_feature_div&quot;,&quot;w&quot;:162.890625,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:940.234375,&quot;y&quot;:377,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-atf-link-desktop&quot;,&quot;w&quot;:145.28125,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:957.84375,&quot;y&quot;:378,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:397,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;climatePledgeFriendlyATF_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:397,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;zeitgeistBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:397,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;socialFabric_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:397,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;delightPricingBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:412,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_unifiedPrice&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:412,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;unifiedPrice_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:412,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-anchorText-pc&quot;,&quot;w&quot;:84.0625,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1145.3125,&quot;y&quot;:416,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-popover-pc&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityPricingTableSummary_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promoPriceBlockMessage_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;b2bUpsell_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pmpux_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;issuancePriceblockAmabot_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;maple-banner-priceblock&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;maple-banner-priceblock-MAPLE-I-acvfDu6NBV-P-MacGLiPqFt&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:444,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;iconfarmv2_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;alternativeOfferEligibilityMessaging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promiseBasedBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;applicablePromotionList_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;availability_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreBadgePopover_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpFastTrack_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deepCheckPromise_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;credentialBasedBadging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;shipsFromSoldBy_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productSupportAndReturnPolicy_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;businessPricing_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smileEligibility_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;holidayAvailabilityMessage_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twister_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valueAdds_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;clickToContact_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpreviewBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smartHomeWidget_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amazonCertifiedBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;renewedProgramDescriptionAtf_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:504,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productOverview_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:144,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:512,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;featurebullets_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:303,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:664,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreInfoBullets_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:983,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;vendorPoweredCoupon_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addOnItem_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;giftcard-holiday-availability-messaging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;andonCord_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;olp_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;edpIngress_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;newerVersion_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePick_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:146,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePick_desktop_container&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:146,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1011,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_i-B08MBLN5JB pd_rd_w-Y8aJ8 pf_rd_p-d5fb8e21-1b9d-4fa6-9105-a64f0e1c946c pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-ab3d42cc-fd95-4c8b-8bb2-f31efeea41f4 pd_rd_wg-pr3Mi &quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;certifiedRefurbishedVersion_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;recommendations_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productAlert_feature_div&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotionalAddon_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotionalBundle_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;heroQuickPromo_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:172,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1165,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:hero-quick-promo:Desktop&quot;,&quot;w&quot;:650,&quot;h&quot;:155,&quot;d&quot;:0,&quot;x&quot;:746.53125,&quot;y&quot;:1182,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twisterJsInitializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;imageBlockVariations_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pageRefreshJsInitializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;emit-js_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bundleV2_feature_div&quot;,&quot;w&quot;:1200,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:329.375,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-1_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:329.375,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_fbt&quot;,&quot;w&quot;:1464,&quot;h&quot;:329.375,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1358,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-Ct1q1 pf_rd_p-f325d01c-4658-4593-be83-3e12ca663f0e pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-61bcc4b5-da28-428a-93fa-3004c33b81dd pd_rd_wg-phVL0&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1687.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-2_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1687.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_SponsoredProductsSimsDpDesktop&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1687.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-uOy7J pf_rd_p-4269e1a0-a218-4fbd-9748-1cd337d2f2a5 pd_rd_wg-phVL0 pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-61bcc4b5-da28-428a-93fa-3004c33b81dd&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sp_detail&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:1687.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:246,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2086.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-3_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:246,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2086.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_sb-dp-id&quot;,&quot;w&quot;:1464,&quot;h&quot;:246,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2086.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-U36uQ pf_rd_p-a9e4210c-3a3e-49a7-8503-29c551dcdaee pd_rd_wg-phVL0 pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-61bcc4b5-da28-428a-93fa-3004c33b81dd&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktopCombined&quot;,&quot;w&quot;:1464,&quot;h&quot;:246,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2086.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;threepsl  MultiBrandCreativeDesktop celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:441,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:269.5,&quot;y&quot;:2155.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:441,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:728.5,&quot;y&quot;:2155.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:441,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:1187.5,&quot;y&quot;:2155.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:441,&quot;h&quot;:175,&quot;d&quot;:1,&quot;x&quot;:1646.5,&quot;y&quot;:2155.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:441,&quot;h&quot;:175,&quot;d&quot;:1,&quot;x&quot;:2105.5,&quot;y&quot;:2155.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cpsiaProductSafetyWarning_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2357.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-cpsia-product-safety-warning_DetailPage_0&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2357.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget c-f&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;legal_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2357.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;importantInformation_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:126.5,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2357.375,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-center-promo-top_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;miraiBTFShopByLook_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotions_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;climatePledgeFriendlyBTF_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-dp-search_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:140,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-swdp-desktop&quot;,&quot;w&quot;:1464,&quot;h&quot;:140,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2511.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplusBrandStory_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2683.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2683.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus3p_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:848,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2683.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus&quot;,&quot;w&quot;:1464,&quot;h&quot;:804,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2727.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;aplus-v2 desktop celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-3p-module-b&quot;,&quot;w&quot;:1464,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2727.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module 3p-module-b aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-3p-module-b&quot;,&quot;w&quot;:1464,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2747.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module 3p-module-b aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-3p-module-b&quot;,&quot;w&quot;:1464,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2767.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module 3p-module-b aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-3p-module-b&quot;,&quot;w&quot;:1464,&quot;h&quot;:283,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:2787.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module 3p-module-b aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-module-4&quot;,&quot;w&quot;:1464,&quot;h&quot;:119,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:3088.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module module-4 aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus-module-11&quot;,&quot;w&quot;:1464,&quot;h&quot;:312,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:3219.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aplus-module module-11 aplus-standard&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplusSustainabilityStory_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:3555.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;technical-data_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:3555.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;HLCXComparisonWidget_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:718,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:3555.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDescription_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:427,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:4305.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;renewedProgramDescriptionBtf_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:4732.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDetails_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:377,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:4732.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDocuments_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5109.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;va-related-videos-widget_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:214.1875,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5109.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-btf_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:440,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5324.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cf-ask-cel&quot;,&quot;w&quot;:1464,&quot;h&quot;:440,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5324.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;services-widget-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5764.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;services-widget-2_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5764.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;click-to-call_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5764.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sponsoredProducts2_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5764.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sp_detail2&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:5764.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ad-display-center-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6163.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;center-28_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6163.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-center-promo_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:283,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6163.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:dp-ads-center-promo:Desktop&quot;,&quot;w&quot;:970,&quot;h&quot;:268,&quot;d&quot;:0,&quot;x&quot;:466.5,&quot;y&quot;:6178.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpreviewSummary_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6446.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer-reviews_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:2937.453125,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6446.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:customer-reviews-top:Glance&quot;,&quot;w&quot;:300,&quot;h&quot;:280,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:6849.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer-reviews-content&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:656.40625,&quot;y&quot;:6700.0625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-link-normal celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:680,&quot;h&quot;:2518,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:6792.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section a-spacing-large reviews-content filterable-reviews-content celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cm-cr-dp-review-list&quot;,&quot;w&quot;:680,&quot;h&quot;:2518,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:6792.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section review-views celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R16S2J4T1UP5DO&quot;,&quot;w&quot;:680,&quot;h&quot;:389,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:6792.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R3UQNYR0NA8JEQ&quot;,&quot;w&quot;:680,&quot;h&quot;:209,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:7203.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R3369MNMQCE4HC&quot;,&quot;w&quot;:680,&quot;h&quot;:329,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:7434.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R2WYJUMZDDEMQZ&quot;,&quot;w&quot;:680,&quot;h&quot;:309,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:7785.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R24FR3OORIWGZ&quot;,&quot;w&quot;:680,&quot;h&quot;:337,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:8116.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R29POAPCNXDDTF&quot;,&quot;w&quot;:680,&quot;h&quot;:249,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:8475.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R33M8J26U6QDB8&quot;,&quot;w&quot;:680,&quot;h&quot;:321,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:8746.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R2NAJUIZ0UB1DG&quot;,&quot;w&quot;:680,&quot;h&quot;:221,&quot;d&quot;:0,&quot;x&quot;:656.40625,&quot;y&quot;:9089.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;detail-page-cf-marker_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;page-refresh-js-initializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;jquery-available_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amazonjq-section_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cloudfront-web-bug_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twister-js-initializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ajaxBlockComponents_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-middle_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-4_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;p13n-desktop-carousel_DPSims_3&quot;,&quot;w&quot;:1464,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9415.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-zlwJY pf_rd_p-b56a886c-2bb4-4e74-b4cf-23d7a76693c8 pf_rd_r-7B4JVVJ5Z67FVD9N3YMD pd_rd_r-61bcc4b5-da28-428a-93fa-3004c33b81dd pd_rd_wg-phVL0 c-f&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sponsored-products-logger_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9825.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ad-endcap-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:108,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9825.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:ad-endcap-1:Glance&quot;,&quot;w&quot;:728,&quot;h&quot;:108,&quot;d&quot;:0,&quot;x&quot;:587.5,&quot;y&quot;:9825.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;seo-related-keywords-pages_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;storeDisclaimer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;registry-sable-update_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;emit-js_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;log-metrics_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;log-detail-page-metrics_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:9933.515625,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;wayfinding-breadcrumbs_feature_div&quot;,&quot;w&quot;:1468,&quot;h&quot;:14,&quot;d&quot;:0,&quot;x&quot;:217.5,&quot;y&quot;:195,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-subheader a-breadcrumb feature&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDescription_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:427,&quot;d&quot;:0,&quot;x&quot;:219.5,&quot;y&quot;:4305.875,&quot;t&quot;:3424,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-row feature&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_iab:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3735}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_iab:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3735}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_groupm:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3735}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_groupm:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3735}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_iab:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3836}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_iab:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3836}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_groupm:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3836}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_groupm:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3836}},{&quot;navigation&quot;:{&quot;t&quot;:&quot;ewc&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:4476}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:1,&quot;l&quot;:{&quot;csmcount&quot;:548,&quot;cel&quot;:259,&quot;navigation&quot;:2,&quot;csm&quot;:1},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:87637}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31yoeTcupOL.js?AUIClients/AmazonUICalendar" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31yoeTcupOL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js?AUIClients/InstallmentPaymentDetailPageMetaAsset&amp;hrzDuonS#us.336175-T1.215308-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/InstallmentPaymentDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/InstallmentPaymentDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hrzDuonS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrzDuonS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,21qOGqjcM7L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;YTNlgBXW#desktop.us.320228-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.315969-T1.312547-T1.287015-T2.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="YTNlgBXW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">YTNlgBXW</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,21qOGqjcM7L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31rFieDgRjL.css?AUIClients/DetailPageAllOffersDisplayAssets&amp;VlCqtHx0#333153-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VlCqtHx0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VlCqtHx0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31rFieDgRjL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41qEDBI4k-L.css?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41qEDBI4k-L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61wv0qJCUnL.js?AUIClients/DetailPageAllOffersDisplayAssets&amp;5rZ+6Yje#language-en.331965-T1.302352-T1.333153-T1.327966-T1.337680-T1.309776-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="5rZ 6Yje" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5rZ 6Yje</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61wv0qJCUnL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21t09Kpi1AL.js,31JUr01gz+L.js,316nVZ1c+gL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,21qOGqjcM7L.js,01ZF+ovNflL.js,31iuSAu5YqL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,217XOv1WjVL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;pJHB8DCT#desktop.us.327990-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.316933-T1.290748-T1.317011-T1.315969-T1.312547-T1.287015-T2.239559-T1.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.155175-T1.262481-T1.271356-T1.286343-T1.324832-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pJHB8DCT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pJHB8DCT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21t09Kpi1AL.js,31JUr01gz+L.js,316nVZ1c+gL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,21qOGqjcM7L.js,01ZF+ovNflL.js,31iuSAu5YqL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,217XOv1WjVL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,218Y6Z0tipL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01DeBJ5q9YL.css,21UvDaNT8uL.css,21ByukFKG4L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,114HJAY+ShL.css,01MLzcotflL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31YeUjpBngL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01zmYtfbgDL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;mXDmzt/0#desktop.us.263677-T2.113788-C.232594-T1.287015-T2.310456-T1.237182-T1.172402-T1.317114-T1.337466-T1.311866-T1.211070-T1.260113-T1.155175-T1.262481-T1.271356-T1.286343-T1.237189-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mXDmzt/0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mXDmzt/0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,218Y6Z0tipL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01DeBJ5q9YL.css,21UvDaNT8uL.css,21ByukFKG4L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,114HJAY+ShL.css,01MLzcotflL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31YeUjpBngL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01zmYtfbgDL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css?AUIClients/AmazonUICalendar&amp;wmT7unlZ#not-trident" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wmT7unlZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wmT7unlZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;u4kikE0H#desktop.us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.323516-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.238103-C.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.142088-C.341406-T1.250575-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u4kikE0H" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u4kikE0H</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css,31qUzWcZhtL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;dNR99psk#desktop.us.321740-T1.281042-T1.271164-T1.271151-T1.323516-T1.263677-T2.113788-C.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.325013-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dNR99psk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dNR99psk</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css,31qUzWcZhtL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;PXHi3hTc#desktop.us.321740-T1.281042-T1.271164-T1.271151-T1.323516-T1.263677-T2.113788-C.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PXHi3hTc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PXHi3hTc</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,316nVZ1c+gL.js,21t09Kpi1AL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,41Zy3sUeVDL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,21mWHADpIYL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;Y/bAGNBw#desktop.us.229463-T1.312885-T1.195406-C.316933-T1.290748-T1.317011-T1.315969-T1.287015-T2.291749-T1.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.155175-T1.262481-T1.271356-T1.286343-T1.324832-T1.172346-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Y/bAGNBw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Y/bAGNBw</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,316nVZ1c+gL.js,21t09Kpi1AL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,41Zy3sUeVDL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,21mWHADpIYL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/51zv8e4W3TL._RC%7C218Y6Z0tipL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,114HJAY+ShL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;3NRPikY1#desktop.us.113788-C.325934-T1.261576-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3NRPikY1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3NRPikY1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51zv8e4W3TL._RC%7C218Y6Z0tipL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,114HJAY+ShL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js?AUIClients/AmazonUI&amp;Dj66etiu#319488-T1.309035-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Dj66etiu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Dj66etiu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01YXz0HO1fL.css?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01YXz0HO1fL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;loF5DEW0#us.123392-T1.317114-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loF5DEW0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loF5DEW0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41g1TctCA1L.js?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41g1TctCA1L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11EIQ5IGqaL._RC%7C012LjolmrML.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css?AUIClients/AmazonUI&amp;6dD1QcEA#us.not-trident.322290-T1.322288-T1.263677-T2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="6dD1QcEA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">6dD1QcEA</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11EIQ5IGqaL._RC%7C012LjolmrML.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js?AUIClients/DetailPageDesktopImageBlockMetaAsset&amp;iG49/WCx#us.336175-T1.169593-T1.299993-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="iG49/WCx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iG49/WCx</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01r8lpNJhRL.css?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;C0ycBIP6#us" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="C0ycBIP6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">C0ycBIP6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01r8lpNJhRL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/311UZ9Ewv%2BL.js?AUIClients/PageRefreshAsset&amp;JL61hJ6+#321884-T1.123392-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="JL61hJ6 " elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">JL61hJ6 </stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/PageRefreshAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/PageRefreshAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/311UZ9Ewv%2BL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01j2xsQ1yML.css?AUIClients/DetailPageMetaAssetFixed&amp;aK/PDdN0#desktop.252810-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aK/PDdN0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aK/PDdN0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01j2xsQ1yML.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/91txxpe1Y-L.js?AUIClients/GestaltDetailPageDesktopMetaAsset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/GestaltDetailPageDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/GestaltDetailPageDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/91txxpe1Y-L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71uBLQCyk2L.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;2Yik1tlc#desktop.us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.323516-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.238103-C.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.327519-T1.325013-T1.224722-T1.169593-T1.142088-C.341406-T1.250575-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="2Yik1tlc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">2Yik1tlc</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71uBLQCyk2L.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31kKc73tPXL.js?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31kKc73tPXL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/218Y6Z0tipL._RC%7C11ikU6MX1JL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21ByukFKG4L.css,01DeBJ5q9YL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,31FQQQnSaCL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31TbF8vSUbL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;lZ3AZUBP#desktop.us.164396-T1.164400-T1.232594-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.155175-T1.262481-T1.271356-T1.286343-T1.237189-T1.172346-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lZ3AZUBP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lZ3AZUBP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/218Y6Z0tipL._RC%7C11ikU6MX1JL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21ByukFKG4L.css,01DeBJ5q9YL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,31FQQQnSaCL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31TbF8vSUbL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/handle-buy-box/ref=dp_start-bbf_1_glance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">B08VGGC444</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">storeID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="qid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">qid</stringProp>
                  <stringProp name="Argument.value">1617136479</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submit.add-to-cart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">submit.add-to-cart</stringProp>
                  <stringProp name="Argument.value">Add to Cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sellingCustomerID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sellingCustomerID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dropdown-selection-ubb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dropdown-selection-ubb</stringProp>
                  <stringProp name="Argument.value">add-new</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sourceCustomerOrgListID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sourceCustomerOrgListID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="viewID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">viewID</stringProp>
                  <stringProp name="Argument.value">glance</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctaDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctaDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isAddon" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isAddon</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dropdown-selection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dropdown-selection</stringProp>
                  <stringProp name="Argument.value">add-new</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nodeID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nodeID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">8-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tagActionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tagActionCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="usePrimeHandler" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">usePrimeHandler</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctaPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctaPageType</stringProp>
                  <stringProp name="Argument.value">detail</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quantity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quantity</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsid</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isMerchantExclusive" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isMerchantExclusive</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="merchantID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">merchantID</stringProp>
                  <stringProp name="Argument.value">AYI5CB742ZI8N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sourceCustomerOrgListItemID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sourceCustomerOrgListItemID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRF</stringProp>
                  <stringProp name="Argument.value">g43o0PpPRen2qDdaTutSlqnL1Tpz7vHyU8h6jPV9/2PcAAAADAAAAABgY4tpcmF3AAAAABVX8CwXqz4nuL9RKX///w==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rebateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rebateId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="offerListingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">offerListingID</stringProp>
                  <stringProp name="Argument.value">2GP6Rb3F1yuesInewGZBYsRaf7kHDVDsz7SOy0869zNvLRtD8Fh5MlJL24T8KrSvbFdPKd1JvyIewPpe%2BpojQ0hvQVQwo%2BYaFhKG5aEqaXgje8bcxiTdy89PR0B7e1Yo0KjX0fuKwjbcU2KMUwg06m3FPz8rTQUpipkbUf9KeU1lHS1KKdp9W%2BK8VJoKbTgK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="wlPopCommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wlPopCommand</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/handle-buy-box/ref=dp_start-bbf_1_glance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5658.0</stringProp>
              <stringProp name="ConstantTimer.delay">2829</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 5658 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cart/ewc/compact?ie=UTF8&amp;hostPageRID=27YP1E91F0QB33F45R55&amp;hostPageType=ShoppingCart&amp;hostSubPageType=NewHUC&amp;storeName=generic&amp;widerCompactView=true&amp;_=1617136495778" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widerCompactView" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">widerCompactView</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostSubPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostSubPageType</stringProp>
                  <stringProp name="Argument.value">NewHUC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageType</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">storeName</stringProp>
                  <stringProp name="Argument.value">generic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageRID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageRID</stringProp>
                  <stringProp name="Argument.value">27YP1E91F0QB33F45R55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136495778</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/ewc/compact</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=27YP1E91F0QB33F45R55&amp;page-type=ShoppingCart&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136495810" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">27YP1E91F0QB33F45R55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136495810</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap_global._CB485967074_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap_global._CB485967074_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/login/fwcim._CB454428048_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/navigation/ajax/dynamic-menu.html?wishlistItems=wishlist&amp;alexaItems=alexa&amp;metricKey=alexaMetric&amp;rid=27YP1E91F0QB33F45R55&amp;isFullWidthPrime=0&amp;isPrime=0&amp;dynamicRequest=1&amp;weblabs=&amp;isFreshRegionAndCustomer=&amp;primeMenuWidth=310&amp;_=1617136500703" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wishlistItems" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wishlistItems</stringProp>
                  <stringProp name="Argument.value">wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dynamicRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dynamicRequest</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="metricKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">metricKey</stringProp>
                  <stringProp name="Argument.value">alexaMetric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alexaItems" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alexaItems</stringProp>
                  <stringProp name="Argument.value">alexa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="primeMenuWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">primeMenuWidth</stringProp>
                  <stringProp name="Argument.value">310</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">27YP1E91F0QB33F45R55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="weblabs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">weblabs</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isPrime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrime</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFullWidthPrime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFullWidthPrime</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshRegionAndCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshRegionAndCustomer</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136500703</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/navigation/ajax/dynamic-menu.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/youraccount/navigation/sidepanel?rid=27YP1E91F0QB33F45R55&amp;_=1617136500704" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">27YP1E91F0QB33F45R55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136500704</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/youraccount/navigation/sidepanel</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/customer-preferences/ajax/icp.html?icpContent=icp&amp;_=1617136500730" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="icpContent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">icpContent</stringProp>
                  <stringProp name="Argument.value">icp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136500730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/customer-preferences/ajax/icp.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://amazon.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">9129.0</stringProp>
              <stringProp name="ConstantTimer.delay">4564.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 9129 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/counter?ctr=desktop_ajax_atf&amp;exp=1617136624196&amp;rId=7WSCDMCRCFF2R6TCM9F0&amp;mkId=ATVPDKIKX0DER&amp;h=35b77c67042b7d554cd9704ee60a0ba5f213b498f174108330d272f62d02a842" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ctr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctr</stringProp>
                  <stringProp name="Argument.value">desktop_ajax_atf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">35b77c67042b7d554cd9704ee60a0ba5f213b498f174108330d272f62d02a842</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136624196</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/counter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cross_border_interstitial/render" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;localCountryCode&quot;:&quot;US&quot;,&quot;customerId&quot;:null,&quot;sessionId&quot;:&quot;144-7425314-1966119&quot;,&quot;deviceType&quot;:&quot;DESKTOP&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;url&quot;:&quot;/&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;languageOfPreference&quot;:&quot;en_US&quot;,&quot;weblabTreatmentMap&quot;:{&quot;CROSS_BORDER_INTERSTITIAL_ES_US_340017&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_BUTTON_BACKGROUND_HIGHLIGHT_329086&quot;:&quot;C&quot;,&quot;CROSS_BORDER_INTERSTITIAL_PL_302078&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_MX_US_341718&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_MOBILE_DP_REDIRECTION_336249&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_EG_302080&quot;:&quot;C&quot;,&quot;NARX_INTERSTITIAL_DP_REDIRECTION_320915&quot;:&quot;T1&quot;,&quot;NARX_GOLDBOX_REDIRECTION_319969&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_NL_257355&quot;:&quot;T1&quot;,&quot;CROSS_BORDER_INTERSTITIAL_FR_CA_332704&quot;:&quot;C&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cross_border_interstitial/render</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136505492" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136505492</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w%22%2C%22adElementId%22%3A%22ape_Gateway_right-2_desktop_placement%22%2C%22pageType%22%3A%22Gateway%22%2C%22slotName%22%3A%22right-2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221002%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQm0ZdynWc30Kh-DuM6Z0G1wAAAF4hNjNegEAAAH0Adwk0NM%22%2C%22adCreativeId%22%3A%2216873747301%22%2C%22adId%22%3A%226350127601%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w&quot;,&quot;adElementId&quot;:&quot;ape_Gateway_right-2_desktop_placement&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;slotName&quot;:&quot;right-2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1002&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qm0ZdynWc30Kh-DuM6Z0G1wAAAF4hNjNegEAAAH0Adwk0NM&quot;,&quot;adCreativeId&quot;:&quot;16873747301&quot;,&quot;adId&quot;:&quot;6350127601&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/overlay/display.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">origSessionId</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                  <stringProp name="Argument.value">/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="referrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">referrer</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isAUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isAUI</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="queryString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">queryString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subPageType</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/overlay/display.html</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w%22%2C%22adElementId%22%3A%22ape_Gateway_desktop-ad-center-1_desktop_placement%22%2C%22pageType%22%3A%22Gateway%22%2C%22slotName%22%3A%22desktop-ad-center-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1001%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQu8rJ9vc720MHPJ8-rvn7DYAAAF4hNjNegEAAAH0AVIbCSY%22%2C%22adCreativeId%22%3A16843453401%2C%22adCreativeTemplateName%22%3A%22Image%22%2C%22adId%22%3A6068657401%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w&quot;,&quot;adElementId&quot;:&quot;ape_Gateway_desktop-ad-center-1_desktop_placement&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;slotName&quot;:&quot;desktop-ad-center-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1001,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qu8rJ9vc720MHPJ8-rvn7DYAAAF4hNjNegEAAAH0AVIbCSY&quot;,&quot;adCreativeId&quot;:16843453401,&quot;adCreativeTemplateName&quot;:&quot;Image&quot;,&quot;adId&quot;:6068657401}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w%22%2C%22adElementId%22%3A%22ape_Gateway_right-7_desktop_placement%22%2C%22pageType%22%3A%22Gateway%22%2C%22slotName%22%3A%22right-7%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1001%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQp-_o0tKc7tCk3RdPMyALxwAAAF4hNjNegEAAAH0AeDiHds%22%2C%22adCreativeId%22%3A17104791001%2C%22adCreativeTemplateName%22%3A%22Image%22%2C%22adId%22%3A6024225201%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zaG9wcGluZ1BvcnRhbC9kZXNrdG9w&quot;,&quot;adElementId&quot;:&quot;ape_Gateway_right-7_desktop_placement&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;slotName&quot;:&quot;right-7&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1001,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qp-_o0tKc7tCk3RdPMyALxwAAAF4hNjNegEAAAH0AeDiHds&quot;,&quot;adCreativeId&quot;:17104791001,&quot;adCreativeTemplateName&quot;:&quot;Image&quot;,&quot;adId&quot;:6024225201}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/sessionCacheUpdateHandler.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionCacheUpdateFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sessionCacheUpdateFlag</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">browserHeight</stringProp>
                  <stringProp name="Argument.value">937</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">browserWidth</stringProp>
                  <stringProp name="Argument.value">1903</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">fVoboEDsYMjWCjzTN8sCObLZif2/oaBmQ3S2N5KuRr8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/sessionCacheUpdateHandler.html</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kindle/journeys/NGU1NTBiMmQt/NGU1NTBiMmQt-ZmI0YjQ3ZmUt-w1500._CB657134624_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kindle/journeys/NGU1NTBiMmQt/NGU1NTBiMmQt-ZmI0YjQ3ZmUt-w1500._CB657134624_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/img18/home/journeys/MzY2YzdjNzct/MzY2YzdjNzct-N2E5ZDQwOWMt-w379._SY304_CB657777537_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/img18/home/journeys/MzY2YzdjNzct/MzY2YzdjNzct-N2E5ZDQwOWMt-w379._SY304_CB657777537_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-NGRhYzlmZWQt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-NGRhYzlmZWQt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ZTc3NTQ2ZGMt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ZTc3NTQ2ZGMt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-Njk3NjUwNzUt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-Njk3NjUwNzUt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ODNmNDA2OTAt-w186._SY116_CB659546071_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/journeys/MGY0YzMzNTMt/MGY0YzMzNTMt-ODNmNDA2OTAt-w186._SY116_CB659546071_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kindle/journeys/ZjMzMTkwMjYt/ZjMzMTkwMjYt-NTNiZWJhNTct-w379._SY304_CB661376892_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kindle/journeys/ZjMzMTkwMjYt/ZjMzMTkwMjYt-NTNiZWJhNTct-w379._SY304_CB661376892_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/MADE_FOR_YOU/SEARCH/madeforyou_Topcard_1x._SY304_CB656886554_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/MADE_FOR_YOU/SEARCH/madeforyou_Topcard_1x._SY304_CB656886554_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZDZlMGY1ZDMt-w186._SY116_CB406101961_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZDZlMGY1ZDMt-w186._SY116_CB406101961_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-Y2JjY2IzMWUt-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-Y2JjY2IzMWUt-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-OThjODQyM2Et-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-OThjODQyM2Et-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZjBmZTdkYTkt-w186._SY116_CB406101960_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2020/journeys/OWM5NTgxMzEt/OWM5NTgxMzEt-ZjBmZTdkYTkt-w186._SY116_CB406101960_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Drop1x._SY116_CB662367672_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Drop1x._SY116_CB662367672_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_MadeForYou_1x._SY116_CB660795608_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_MadeForYou_1x._SY116_CB660795608_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Bond_1x._SY116_CB662367672_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_Bond_1x._SY116_CB662367672_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_PW_1x._SY116_CB660795608_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/AMAZON_FASHION/2021/MISC/QUADCARD_REFRESH/GW_D_QC_Mar_PW_1x._SY116_CB660795608_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41pqjywIPuL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41pqjywIPuL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/51eZPdpdJVL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51eZPdpdJVL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41dRr2Vp6wL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41dRr2Vp6wL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/I/41dJT0v0ALL._AC_SY119_.jpg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41dJT0v0ALL._AC_SY119_.jpg</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css?AUIClients/AmazonUICalendar&amp;wmT7unlZ#not-trident" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wmT7unlZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wmT7unlZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/script-13-min._CB485934002_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/script-13-min._CB485934002_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/login/fwcim._CB454428048_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01Re6AqkVUL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21ZbonpQxqL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,01t2esUHF0L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;hTOKOLlO#us.320228-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.315969-T1.312547-T1.287015-T2.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hTOKOLlO" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hTOKOLlO</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01Re6AqkVUL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41U+aCLi-hL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21ZbonpQxqL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,01t2esUHF0L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31kKc73tPXL.js?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31kKc73tPXL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/71uBLQCyk2L.js?AUIClients/AmazonDevicesDetailPageInstantSavingsAssets&amp;6JRyJTvk#us.327519-T1.325013-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="6JRyJTvk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">6JRyJTvk</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonDevicesDetailPageInstantSavingsAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageInstantSavingsAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/71uBLQCyk2L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/011uHgmxBfL._RC%7C01czYle8OiL.css,015NcZpqjOL.css,01OhA16ND1L.css,31MkQHV3gaL.css,01NW8VTUeVL.css,315GMAwkLiL.css,11jG57OztzL.css,11kmwdXfY5L.css,01vUDet4b1L.css,01D-B-OeNDL.css,31l-Nc5zsiL.css,01ZGR4PDSTL.css,01FtAuFRr3L.css,21ZjVyQPjML.css,01aCd87PyEL.css_.css?AUIClients/DetailPageDesktopDefaultStableMetaAsset&amp;oeb06PVX#us.232594-T1.310456-T1.237182-T1.337466-T1.260113-T1.262481-T1.271356-T1.286343-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopDefaultStableMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopDefaultStableMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="oeb06PVX" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">oeb06PVX</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/011uHgmxBfL._RC%7C01czYle8OiL.css,015NcZpqjOL.css,01OhA16ND1L.css,31MkQHV3gaL.css,01NW8VTUeVL.css,315GMAwkLiL.css,11jG57OztzL.css,11kmwdXfY5L.css,01vUDet4b1L.css,01D-B-OeNDL.css,31l-Nc5zsiL.css,01ZGR4PDSTL.css,01FtAuFRr3L.css,21ZjVyQPjML.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.0._CB485968702_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.0._CB485968702_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11EIQ5IGqaL._RC%7C01ZTHTZObnL.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01xH24p45SL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css?AUIClients/AmazonUI&amp;gV6TejwY#us.not-trident.322290-T2.322288-T1.263677-T2.265810-T2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="gV6TejwY" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gV6TejwY</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11EIQ5IGqaL._RC%7C01ZTHTZObnL.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01xH24p45SL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js?AUIClients/DetailPageDesktopImageBlockMetaAsset&amp;iG49/WCx#us.336175-T1.169593-T1.299993-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="iG49/WCx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iG49/WCx</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/nav2/gamma/accessoriesCSS/US/combined-3689044428._CB485918731_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/nav2/gamma/accessoriesCSS/US/combined-3689044428._CB485918731_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01q5WwgvghL._RC%7C0121zKjk26L.css,11xRy3bSkOL.css,01QUs5FVXoL.css,41vOQb1k0LL.css,01rgQ3jqo7L.css,2178xuWumKL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,21W5fiSj06L.css,4130GA9KMiL.css,01lHbKl4MxL.css,419+eoM+IGL.css,01zmYtfbgDL.css,31dTK1hHb6L.css,31v5j8kQd3L.css,01f31VNCowL.css,31HQ7uCUltL.css,01TZ9fpDSSL.css,01IY99sMV0L.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01YXz0HO1fL.css,01wkbZw3FtL.css,41qEDBI4k-L.css_.css?AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset&amp;W0Q0+90d#us.321740-T1.281042-T1.271164-T1.271151-T1.164396-T1.209620-T1.129737-C.237189-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="W0Q0 90d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">W0Q0 90d</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01q5WwgvghL._RC%7C0121zKjk26L.css,11xRy3bSkOL.css,01QUs5FVXoL.css,41vOQb1k0LL.css,01rgQ3jqo7L.css,2178xuWumKL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,21W5fiSj06L.css,4130GA9KMiL.css,01lHbKl4MxL.css,419+eoM+IGL.css,01zmYtfbgDL.css,31dTK1hHb6L.css,31v5j8kQd3L.css,01f31VNCowL.css,31HQ7uCUltL.css,01TZ9fpDSSL.css,01IY99sMV0L.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01YXz0HO1fL.css,01wkbZw3FtL.css,41qEDBI4k-L.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/style-4._CB485946758_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/style-4._CB485946758_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/profile/customer-popover/style-3._CB485933656_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/communities/profile/customer-popover/style-3._CB485933656_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/91txxpe1Y-L.js?AUIClients/GestaltDetailPageDesktopMetaAsset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/GestaltDetailPageDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/GestaltDetailPageDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/91txxpe1Y-L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/51zv8e4W3TL._RC%7C015NcZpqjOL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;4DBrSKSS#us.325934-T1.261576-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="4DBrSKSS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">4DBrSKSS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51zv8e4W3TL._RC%7C015NcZpqjOL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/browser-scripts/fruitCSS/US-secure-combined-11313707._CB485918966_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/browser-scripts/fruitCSS/US-secure-combined-11313707._CB485918966_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.1._CB485967487_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.1._CB485967487_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41IYcMQCjlL._RC%7C01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,01g2EoxOu-L.css,01xJovNL7KL.css,210Czw7BAgL.css,01iXxkJ+wuL.css,01Qji-D4YPL.css,21l8ikMBSWL.css,015FNYa5WbL.css,21jUQU6VhYL.css,21pOUFVE5LL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,21GWIPOCN2L.css,01AT3O0C6cL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css?AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1&amp;wppyPHyx#us.263677-T2.287015-T2.311866-T1.211070-T1.262481-T1.271356-T1.286343-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wppyPHyx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wppyPHyx</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41IYcMQCjlL._RC%7C01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,01g2EoxOu-L.css,01xJovNL7KL.css,210Czw7BAgL.css,01iXxkJ+wuL.css,01Qji-D4YPL.css,21l8ikMBSWL.css,015FNYa5WbL.css,21jUQU6VhYL.css,21pOUFVE5LL.css,31gnaffJaOL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01+ah2okB5L.css,21GWIPOCN2L.css,01AT3O0C6cL.css,01aCd87PyEL.css,01vF6gFybxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js?AUIClients/AmazonUI&amp;tbOQM7bq#309035-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tbOQM7bq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tbOQM7bq</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41Yqep%2BfzEL._RC%7C71EA77kZwfL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,31Nnd8dHj4L.js,31X6Dg1fL8L.js,31YSI-SWT6L.js,31BIH4OUqyL.js,41U+aCLi-hL.js,019W6kk1gjL.js,312JSfRrqlL.js,01XEEGOr+kL.js,01hkseOXj6L.js,41YD13pEeXL.js,51+kpt7cxwL.js,01IC-gBKyYL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01PQKs49DyL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,11DmbZUrH1L.js,21pSZajIKhL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,21ZbonpQxqL.js,21YblE14ZTL.js,01acYp41-1L.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1&amp;lmQVFL5U#us.327990-T1.229463-T1.292695-C.328358-T1.312885-T1.337680-T1.327484-T1.316933-T1.290748-T1.317011-T1.315969-T1.312547-T1.287015-T2.239559-T1.336175-T1.123392-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.262481-T1.271356-T1.286343-T1.154031-T3.301499-T1.224722-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lmQVFL5U" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lmQVFL5U</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopDefaultMetaAsset_asset_segregation_TURBO_DESKTOP_T1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41Yqep%2BfzEL._RC%7C71EA77kZwfL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,31Nnd8dHj4L.js,31X6Dg1fL8L.js,31YSI-SWT6L.js,31BIH4OUqyL.js,41U+aCLi-hL.js,019W6kk1gjL.js,312JSfRrqlL.js,01XEEGOr+kL.js,01hkseOXj6L.js,41YD13pEeXL.js,51+kpt7cxwL.js,01IC-gBKyYL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51zKECG39HL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01PQKs49DyL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,11DmbZUrH1L.js,21pSZajIKhL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,21ZbonpQxqL.js,21YblE14ZTL.js,01acYp41-1L.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41qEDBI4k-L.css?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41qEDBI4k-L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01YXz0HO1fL.css?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01YXz0HO1fL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61tFpyF45pL.js?AUIClients/DetailPageAllOffersDisplayAssets&amp;XAObFg/N#language-en.331965-T1.302352-T1.327966-T1.337680-T1.309776-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="XAObFg/N" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">XAObFg/N</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61tFpyF45pL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11Gx%2B6S5O-L._RC%7C11wTwl+500L.js,01qwoVEkKlL.js,01X2zigX4kL.js,61Vr-aucdZL.js,31t4ojoCyTL.js,217x2gtF0XL.js,21FBJlPfM6L.js,01jEIwUjmbL.js_.js?AUIClients/USOnlyHardlinesDesktopMetaAsset&amp;/BwvNFF/#us.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USOnlyHardlinesDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USOnlyHardlinesDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="/BwvNFF/" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">/BwvNFF/</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11Gx%2B6S5O-L._RC%7C11wTwl+500L.js,01qwoVEkKlL.js,01X2zigX4kL.js,61Vr-aucdZL.js,31t4ojoCyTL.js,217x2gtF0XL.js,21FBJlPfM6L.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31qUzWcZhtL.css?AUIClients/AmazonDevicesDetailPageInstantSavingsAssets&amp;sspIkXcI#325013-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sspIkXcI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sspIkXcI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonDevicesDetailPageInstantSavingsAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageInstantSavingsAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31qUzWcZhtL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,01rgQ3jqo7L.css,01aCd87PyEL.css_.css?AUIClients/USOnlySoftlinesDesktopMetaAsset&amp;RCa3eCE6#172402-T1.317114-T1.262481-T1.271356-T1.286343-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USOnlySoftlinesDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USOnlySoftlinesDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RCa3eCE6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RCa3eCE6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,01rgQ3jqo7L.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31alK9XplgL.css?AUIClients/DetailPageAllOffersDisplayAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31alK9XplgL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js?AUIClients/InstallmentPaymentDetailPageMetaAsset&amp;hrzDuonS#us.336175-T1.215308-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/InstallmentPaymentDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/InstallmentPaymentDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hrzDuonS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrzDuonS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/nav2/gamma/websiteGridCSS/websiteGridCSS-websiteGridCSS-48346.css._CB485931225_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/nav2/gamma/websiteGridCSS/websiteGridCSS-websiteGridCSS-48346.css._CB485931225_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01BwcPgON%2BL._RC%7C31j4n5vuY7L.css,01rgQ3jqo7L.css,21VgVEzltcL.css,218XVPWf2YL.css,01dCidM2ztL.css,11MXghh1eBL.css,61H5jM7l4aL.css,01V7QaYzv6L.css,01aCd87PyEL.css_.css?AUIClients/USOnlyHardlinesDesktopMetaAsset&amp;nVWhgNKr#us.172402-T1.317114-T1.133480-T1.262481-T1.271356-T1.286343-T1.109378-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USOnlyHardlinesDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USOnlyHardlinesDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nVWhgNKr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nVWhgNKr</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01BwcPgON%2BL._RC%7C31j4n5vuY7L.css,01rgQ3jqo7L.css,21VgVEzltcL.css,218XVPWf2YL.css,01dCidM2ztL.css,11MXghh1eBL.css,61H5jM7l4aL.css,01V7QaYzv6L.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/browser-scripts/dpSpritesCSS/US-secure-combined-3520421511._CB485930867_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/browser-scripts/dpSpritesCSS/US-secure-combined-3520421511._CB485930867_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01q5WwgvghL._RC%7C11iz0Z3rJ7L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01QLwk8mu6L.css,018mGORJ7tL.css,21VgVEzltcL.css_.css?AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset&amp;VWWpT/Zm#237189-T1.109378-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="VWWpT/Zm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VWWpT/Zm</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01q5WwgvghL._RC%7C11iz0Z3rJ7L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01QLwk8mu6L.css,018mGORJ7tL.css,21VgVEzltcL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01X2zigX4kL._RC%7C01jEIwUjmbL.js_.js?AUIClients/USOnlySoftlinesDesktopMetaAsset&amp;SQQh8JAI#262481-T1.271356-T1.286343-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USOnlySoftlinesDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USOnlySoftlinesDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SQQh8JAI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SQQh8JAI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01X2zigX4kL._RC%7C01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/cs/projects/text-trace/texttrace_typ._CB485929114_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/cs/projects/text-trace/texttrace_typ._CB485929114_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31yoeTcupOL.js?AUIClients/AmazonUICalendar" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31yoeTcupOL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41g1TctCA1L.js?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41g1TctCA1L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/kitchen/scheduled-delivery/sd_style-ScheduledDeliveryJavascript-v2-b1.0.118.0-min._CB485931710_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/kitchen/scheduled-delivery/sd_style-ScheduledDeliveryJavascript-v2-b1.0.118.0-min._CB485931710_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/2184GmmGbKL._RC%7C31JUr01gz+L.js,01I-WWW2CuL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01OrQ5AXqsL.js,11DGcrZsUwL.js,01ZF+ovNflL.js,21+6n1I3-GL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,61Vr-aucdZL.js_.js?AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset&amp;4UopNQOt#us.324832-T1.329810-T1.109378-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="4UopNQOt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">4UopNQOt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopSoftlinesOnlyMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/2184GmmGbKL._RC%7C31JUr01gz+L.js,01I-WWW2CuL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01OrQ5AXqsL.js,11DGcrZsUwL.js,01ZF+ovNflL.js,21+6n1I3-GL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,61Vr-aucdZL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01I-WWW2CuL._RC%7C2184GmmGbKL.js,318rs4piGPL.js,11H+quk5jAL.js,01jEqq6I0UL.js,612N12HQlLL.js,0193uyIciNL.js,41fW1gpnNZL.js,410lRovX8FL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,015TRQC5i+L.js,614laSAkMiL.js,11WPSuNg4JL.js,4123BTTtUrL.js,217XOv1WjVL.js,21NDIsf0a1L.js,61ps9q1dLrL.js,115eJenyunL.js,21v7Os12mhL.js,11XkXxlfwyL.js,51GlvQZS+bL.js,11DbyV7EqEL.js,011kwg0OTQL.js,014kCoIHgIL.js,01sSKGYWoFL.js,0140uXMtvJL.js,01fffmaF5CL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,31kKc73tPXL.js,01lcH4zcTaL.js,31-yxBnv3nL.js,41g1TctCA1L.js_.js?AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset&amp;uPX5a/CZ#us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.312887-T1.140997-T1.291749-T1.209620-T1.313746-T1.326363-T1.317281-T1.324832-T1.172346-T1.109378-T1.133003-T1.341406-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopHardlinesOnlyMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uPX5a/CZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uPX5a/CZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01I-WWW2CuL._RC%7C2184GmmGbKL.js,318rs4piGPL.js,11H+quk5jAL.js,01jEqq6I0UL.js,612N12HQlLL.js,0193uyIciNL.js,41fW1gpnNZL.js,410lRovX8FL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,015TRQC5i+L.js,614laSAkMiL.js,11WPSuNg4JL.js,4123BTTtUrL.js,217XOv1WjVL.js,21NDIsf0a1L.js,61ps9q1dLrL.js,115eJenyunL.js,21v7Os12mhL.js,11XkXxlfwyL.js,51GlvQZS+bL.js,11DbyV7EqEL.js,011kwg0OTQL.js,014kCoIHgIL.js,01sSKGYWoFL.js,0140uXMtvJL.js,01fffmaF5CL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,31kKc73tPXL.js,01lcH4zcTaL.js,31-yxBnv3nL.js,41g1TctCA1L.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/personalization/yourstore/js/ratings-bar-366177._CB485931229_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/personalization/yourstore/js/ratings-bar-366177._CB485931229_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01t2esUHF0L._RC%7C01JzE3-DfLL.js,013aNY++XJL.js,016QFWAAdML.js,01j1Y1PFCRL.js,01Fy9QPljuL.js,01Re6AqkVUL.js,01YivelYW5L.js,31UjTApGOPL.js,21E2aIDj6DL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,11+dypSOVUL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,41lkyHEebjL.js,11G4c43OZvL.js,11oGaoYgbdL.js,01OtvpwikQL.js,013eoEBTVUL.js,018ZxeiHuPL.js,01jEIwUjmbL.js_.js?AUIClients/DetailPageDesktopDefaultStableMetaAsset&amp;d0DaUGiW#us.195406-C.337466-T1.184660-C.262481-T1.271356-T1.286343-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopDefaultStableMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopDefaultStableMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="d0DaUGiW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d0DaUGiW</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01t2esUHF0L._RC%7C01JzE3-DfLL.js,013aNY++XJL.js,016QFWAAdML.js,01j1Y1PFCRL.js,01Fy9QPljuL.js,01Re6AqkVUL.js,01YivelYW5L.js,31UjTApGOPL.js,21E2aIDj6DL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,11+dypSOVUL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,41lkyHEebjL.js,11G4c43OZvL.js,11oGaoYgbdL.js,01OtvpwikQL.js,013eoEBTVUL.js,018ZxeiHuPL.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap_global._CB485967074_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap_global._CB485967074_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/twister/beta/twister-dpf.87b069b255db02b4805f7e714b617f8f._V1_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/twister/beta/twister-dpf.87b069b255db02b4805f7e714b617f8f._V1_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/record-impressions?c4i=ePm_fHprndBNCwFRGMXxT3Tquvc-92UpIzQbSbJ97ssg04wYCV8epdSwcpZn9__de8Ipn_Zde_gBPeEuX_ja9x4uV_OinJVrUYwXffyy7aYYLRc4PjM2ze6WE7hJODef459IwaoiRxY5mQwtpEKIwcPbJGMwofJm0IdQSj5nLNhIC-2UADtDiIoG3sSKWLkP1tsBHdc1tvnYovjyEySzS0Twghy0lx5B6wqkok0cok4sX8YPhOltZQ&amp;rId=7WSCDMCRCFF2R6TCM9F0&amp;mkId=ATVPDKIKX0DER&amp;exp=1617136624241&amp;h=bbc5f93ebc03aab9454c977720b6646902ff25296de6bd0a7eef3b36089b731a" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">bbc5f93ebc03aab9454c977720b6646902ff25296de6bd0a7eef3b36089b731a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c4i</stringProp>
                  <stringProp name="Argument.value">ePm_fHprndBNCwFRGMXxT3Tquvc-92UpIzQbSbJ97ssg04wYCV8epdSwcpZn9__de8Ipn_Zde_gBPeEuX_ja9x4uV_OinJVrUYwXffyy7aYYLRc4PjM2ze6WE7hJODef459IwaoiRxY5mQwtpEKIwcPbJGMwofJm0IdQSj5nLNhIC-2UADtDiIoG3sSKWLkP1tsBHdc1tvnYovjyEySzS0Twghy0lx5B6wqkok0cok4sX8YPhOltZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136624241</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/record-impressions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="main page" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/record-impressions?c4i=ePm_fHprndBNa8JAFIXhX3RgkpnMZJallirZiEhxe3M_qlQS0bSi_vkqFIToqtsDZ_E-l5Gw6OFr6HdPoN9p0COdxt4vy4_5pJk1Kzd5W4zxm36Y4nW5wP6a8dltziqgTvDd3Yf_RHqKpak45IprhNB65JBLWJFVJKRYBh5DaF2LFOxAbXX9EBty0oRCWFoiH9XsjvXngIG2W6x132O3-XkQbKNzpRhDqhQRHCvqxB6mxuQrMUp0U_4Fa8ZxoA&amp;rId=7WSCDMCRCFF2R6TCM9F0&amp;mkId=ATVPDKIKX0DER&amp;exp=1617136624241&amp;h=a31074948e02c0d9b98af17404848df151b6d13fa5f8a2b8f79650e5f75a5f7a" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">a31074948e02c0d9b98af17404848df151b6d13fa5f8a2b8f79650e5f75a5f7a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c4i</stringProp>
                  <stringProp name="Argument.value">ePm_fHprndBNa8JAFIXhX3RgkpnMZJallirZiEhxe3M_qlQS0bSi_vkqFIToqtsDZ_E-l5Gw6OFr6HdPoN9p0COdxt4vy4_5pJk1Kzd5W4zxm36Y4nW5wP6a8dltziqgTvDd3Yf_RHqKpak45IprhNB65JBLWJFVJKRYBh5DaF2LFOxAbXX9EBty0oRCWFoiH9XsjvXngIG2W6x132O3-XkQbKNzpRhDqhQRHCvqxB6mxuQrMUp0U_4Fa8ZxoA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136624241</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/record-impressions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/record-impressions?c4i=ePm_fHprndBBa8JAEAXgX_Qgm51dd45aS5VcRKT0OtmZtGJIRCOl7Z9vhIIQPfUyhze8w_t-JsJq58PQHx9Av8hgn_I19Z7vXjfLal29Fcvn7RS_6ocVnnZbnMYZ793-2xTSKS7dLfjPyFxbYJc9SqYI8o2iFpfhOLDPnAqnNoVIjSoFz7BEPHZmgjpaATJjb5qu_xvWnwMGaVt82KnHYd9pa1jcMc4kxMwlgcowHrEE1pogpYvU5MQx0JX6F1HscRs&amp;rId=7WSCDMCRCFF2R6TCM9F0&amp;mkId=ATVPDKIKX0DER&amp;exp=1617136624241&amp;h=0f271ac3afc881eb30a16875bfd8acff0db1b6d0e26fb85f749c48bb1be2eeec" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">0f271ac3afc881eb30a16875bfd8acff0db1b6d0e26fb85f749c48bb1be2eeec</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c4i</stringProp>
                  <stringProp name="Argument.value">ePm_fHprndBBa8JAEAXgX_Qgm51dd45aS5VcRKT0OtmZtGJIRCOl7Z9vhIIQPfUyhze8w_t-JsJq58PQHx9Av8hgn_I19Z7vXjfLal29Fcvn7RS_6ocVnnZbnMYZ793-2xTSKS7dLfjPyFxbYJc9SqYI8o2iFpfhOLDPnAqnNoVIjSoFz7BEPHZmgjpaATJjb5qu_xvWnwMGaVt82KnHYd9pa1jcMc4kxMwlgcowHrEE1pogpYvU5MQx0JX6F1HscRs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136624241</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/record-impressions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=undefined&amp;prefix=&amp;event=onFocusEmptySearchTerm&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136525992" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onFocusEmptySearchTerm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136525992</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=69&amp;prefix=cel&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136527083" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136527083</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=76&amp;prefix=cell&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136527346" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">76</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136527346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=32&amp;prefix=cell+p&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136527580" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell p</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136527580</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=72&amp;prefix=cell+pho&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136527754" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell pho</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136527754</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=78&amp;prefix=cell+phone&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136528018" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">78</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136528018</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/ah/ajax/record-impressions?c4i=ePm_fHprndBLS8NAGIXhX3RgLt83l6W0Yms2JQTpdiYzU8WQSIwU7Z9vhEIgduX2LF44z2UlnPLn-zR83IF-ClM-h--190PzcthW--ooto_1Gr8aph02TY1xvnHq335yQugTvvpl-M9JTkErlgwq0oGED_DWJrTWF2KjyBq5hnDaaCaKiCZFkCOL6JWFmzslk7Kay4J1c8AUug6veRzw_MfPlCKk0A5JGj8XRQuvfIIlwaw5GBXNr_EVEpRsBg&amp;rId=7WSCDMCRCFF2R6TCM9F0&amp;mkId=ATVPDKIKX0DER&amp;exp=1617136624241&amp;h=d3350ad16475cfca2f9f0e8a9ff705bf7a8de4ff95813c2292c615b6f1c4d7d6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">d3350ad16475cfca2f9f0e8a9ff705bf7a8de4ff95813c2292c615b6f1c4d7d6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c4i</stringProp>
                  <stringProp name="Argument.value">ePm_fHprndBLS8NAGIXhX3RgLt83l6W0Yms2JQTpdiYzU8WQSIwU7Z9vhEIgduX2LF44z2UlnPLn-zR83IF-ClM-h--190PzcthW--ooto_1Gr8aph02TY1xvnHq335yQugTvvpl-M9JTkErlgwq0oGED_DWJrTWF2KjyBq5hnDaaCaKiCZFkCOL6JWFmzslk7Kay4J1c8AUug6veRzw_MfPlCKk0A5JGj8XRQuvfIIlwaw5GBXNr_EVEpRsBg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mkId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mkId</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rId</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">exp</stringProp>
                  <stringProp name="Argument.value">1617136624241</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ah/ajax/record-impressions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=32&amp;prefix=cell+phone+s&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136529683" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone s</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136529683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=84&amp;prefix=cell+phone+sta&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136529901" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone sta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">84</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136529901</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=78&amp;prefix=cell+phone+stan&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136530156" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone stan</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">78</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136530156</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7WSCDMCRCFF2R6TCM9F0&amp;page-type=Gateway&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;b2b=0&amp;fresh=0&amp;ks=68&amp;prefix=cell+phone+stand&amp;event=onKeyPress&amp;limit=11&amp;fb=1&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136530306" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">cell phone stand</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ks</stringProp>
                  <stringProp name="Argument.value">68</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7WSCDMCRCFF2R6TCM9F0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="b2b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b2b</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fresh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fresh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">onKeyPress</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136530306</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/s/ref=nb_sb_noss_1?url=search-alias%3Daps&amp;field-keywords=cell+phone+stand" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">search-alias=aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="field-keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">field-keywords</stringProp>
                  <stringProp name="Argument.value">cell phone stand</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">s/ref=nb_sb_noss_1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">26248.0</stringProp>
              <stringProp name="ConstantTimer.delay">13124</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 26248 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cart/ewc/compact?ie=UTF8&amp;hostPageRID=1B5ZVZ7QCSRV5B5NJ2D6&amp;hostPageType=Search&amp;storeName=generic&amp;widerCompactView=true&amp;_=1617136531965" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widerCompactView" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">widerCompactView</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageType</stringProp>
                  <stringProp name="Argument.value">Search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">storeName</stringProp>
                  <stringProp name="Argument.value">generic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageRID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageRID</stringProp>
                  <stringProp name="Argument.value">1B5ZVZ7QCSRV5B5NJ2D6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136531965</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/ewc/compact</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zL3JlZj1uYl9zYl9ub3NzXzE%2FdXJsPXNlYXJjaC1hbGlhcyUzRGFwcyZmaWVsZC1rZXl3b3Jkcz1jZWxsK3Bob25lK3N0YW5k%22%2C%22adElementId%22%3A%22ape_Search_auto-bottom-advertising-0_portal-batch-fast-btf-loom_placement%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-bottom-advertising-0%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQjhyK0CjKWdkhPV7r0Eb3bIAAAF4hNk1mAEAAAH0AcdUSHI%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200038158774321%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zL3JlZj1uYl9zYl9ub3NzXzE/dXJsPXNlYXJjaC1hbGlhcyUzRGFwcyZmaWVsZC1rZXl3b3Jkcz1jZWxsK3Bob25lK3N0YW5k&quot;,&quot;adElementId&quot;:&quot;ape_Search_auto-bottom-advertising-0_portal-batch-fast-btf-loom_placement&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-bottom-advertising-0&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QjhyK0CjKWdkhPV7r0Eb3bIAAAF4hNk1mAEAAAH0AcdUSHI&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200038158774321}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%226856750040101%22%2C%22adId%22%3A%222384828570201%22%2C%22campaignId%22%3A%228933628890901%22%2C%22adImpressionId%22%3A%22kyhCavE-SxbRll2knjMsEA%22%2C%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%7D%2C%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22MultiCardCreativeDesktop%22%2C%22pageType%22%3A%22Search%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22slotName%22%3A%22auto-sparkle-hsa-tetris%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;6856750040101&quot;,&quot;adId&quot;:&quot;2384828570201&quot;,&quot;campaignId&quot;:&quot;8933628890901&quot;,&quot;adImpressionId&quot;:&quot;kyhCavE-SxbRll2knjMsEA&quot;,&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010},&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;MultiCardCreativeDesktop&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;slotName&quot;:&quot;auto-sparkle-hsa-tetris&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%223915199670801%22%2C%22campaignId%22%3A%228933628890901%22%2C%22adImpressionId%22%3A%22%22%2C%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%7D%2C%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22MultiBrandCreativeDesktop%22%2C%22pageType%22%3A%22Search%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22slotName%22%3A%22desktop-hsa-3psl%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;3915199670801&quot;,&quot;campaignId&quot;:&quot;8933628890901&quot;,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010},&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;slotName&quot;:&quot;desktop-hsa-3psl&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=1B5ZVZ7QCSRV5B5NJ2D6&amp;page-type=Search&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136532153" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">1B5ZVZ7QCSRV5B5NJ2D6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136532153</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://aax-us-iad.amazon.com/e/loi/imp?b=Ig5aRiFehUGgRA1yYwcDhtMAAAF4hNk0eAEAAAH2Aey20as" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">b</stringProp>
                  <stringProp name="Argument.value">Ig5aRiFehUGgRA1yYwcDhtMAAAF4hNk0eAEAAAH2Aey20as</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">e/loi/imp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22video_single_product%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22main%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%2C%22adImpressionId%22%3A%22%22%2C%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%22%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;video_single_product&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;main&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?ie=UTF-8&amp;pl=%7B%22adPlacementMetaData%22%3A%7B%22feedbackType%22%3A%22loomSearch%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-left-advertising-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%22undefined%22%2C%22adCreativeTemplateName%22%3A%22dynamicecommercesdciusdesktop%22%2C%22adId%22%3A%22200059500868511%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQrBzeYV0ZPITO9dB_FcAZkAAAAF4hNk1mAEAAAH0AdFnOrw%22%2C%22adProgramId%22%3A%221027%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;feedbackType&quot;:&quot;loomSearch&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-left-advertising-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;undefined&quot;,&quot;adCreativeTemplateName&quot;:&quot;dynamicecommercesdciusdesktop&quot;,&quot;adId&quot;:&quot;200059500868511&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QrBzeYV0ZPITO9dB_FcAZkAAAAF4hNk1mAEAAAH0AdFnOrw&quot;,&quot;adProgramId&quot;:&quot;1027&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?ie=UTF-8&amp;pl=%7B%22adPlacementMetaData%22%3A%7B%22feedbackType%22%3A%22loomSearch%22%2C%22pageType%22%3A%22Search%22%2C%22slotName%22%3A%22auto-left-advertising-2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adCreativeId%22%3A%22undefined%22%2C%22adCreativeTemplateName%22%3A%22dynamicecommercesdciusdesktop%22%2C%22adId%22%3A%22200051598334321%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQoGfJkemNLaSxazU4G5h4vcAAAF4hNk1mAEAAAH0ARRwHRI%22%2C%22adProgramId%22%3A%221027%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;feedbackType&quot;:&quot;loomSearch&quot;,&quot;pageType&quot;:&quot;Search&quot;,&quot;slotName&quot;:&quot;auto-left-advertising-2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adCreativeId&quot;:&quot;undefined&quot;,&quot;adCreativeTemplateName&quot;:&quot;dynamicecommercesdciusdesktop&quot;,&quot;adId&quot;:&quot;200051598334321&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QoGfJkemNLaSxazU4G5h4vcAAAF4hNk1mAEAAAH0ARRwHRI&quot;,&quot;adProgramId&quot;:&quot;1027&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="search results" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/Adjustable-Aluminum-Android-Smartphone-Desktop/dp/B087LNGM9R/ref=sr_1_3?dchild=1&amp;keywords=cell+phone+stand&amp;qid=1617136530&amp;sr=8-3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dchild" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dchild</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">keywords</stringProp>
                  <stringProp name="Argument.value">cell phone stand</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="qid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qid</stringProp>
                  <stringProp name="Argument.value">1617136530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">8-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Adjustable-Aluminum-Android-Smartphone-Desktop/dp/B087LNGM9R/ref=sr_1_3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">12791.0</stringProp>
              <stringProp name="ConstantTimer.delay">6395.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 12791 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/du/bbop-ms3-ajax-endpoint.html?ASIN=B087LNGM9R&amp;merchantID=A2S670BVERRBIL&amp;bbopruleID=Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible&amp;sbbopruleID=Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible&amp;deliveryOptions=%5B%5D&amp;preorder=false&amp;releaseDateDeliveryEligible=false&amp;deliveryCountryCode=US" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="deliveryCountryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">deliveryCountryCode</stringProp>
                  <stringProp name="Argument.value">US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="merchantID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">merchantID</stringProp>
                  <stringProp name="Argument.value">A2S670BVERRBIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">B087LNGM9R</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="releaseDateDeliveryEligible" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">releaseDateDeliveryEligible</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="deliveryOptions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">deliveryOptions</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="preorder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preorder</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bbopruleID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bbopruleID</stringProp>
                  <stringProp name="Argument.value">Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sbbopruleID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sbbopruleID</stringProp>
                  <stringProp name="Argument.value">Acquisition_AddToCart_PrimeBasicFreeTrialUpsellEligible</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/du/bbop-ms3-ajax-endpoint.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI%2FcmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z%22%2C%22adElementId%22%3A%22ape_Detail_hero-quick-promo_Desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22hero-quick-promo%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221027%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQmLNfOSBzB1iZ47Mxp6tPBEAAAF4hNll3AEAAAH0ARZ1nNA%22%2C%22adId%22%3A%22200057310404321%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI/cmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z&quot;,&quot;adElementId&quot;:&quot;ape_Detail_hero-quick-promo_Desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;hero-quick-promo&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1027&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QmLNfOSBzB1iZ47Mxp6tPBEAAAF4hNll3AEAAAH0ARZ1nNA&quot;,&quot;adId&quot;:&quot;200057310404321&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI%2FcmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z%22%2C%22adElementId%22%3A%22ape_Detail_ams-detail-right-v2_desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22ams-detail-right-v2%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQtbgk2cyl8_yM7nCi6jo2U0AAAF4hNll3AEAAAH0AbAF0FQ%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200052700211381%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI/cmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ams-detail-right-v2_desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ams-detail-right-v2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qtbgk2cyl8_yM7nCi6jo2U0AAAF4hNll3AEAAAH0AbAF0FQ&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200052700211381}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/prime/pipeline/membersignup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ingressId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ingressId</stringProp>
                  <stringProp name="Argument.value">BBOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">primeAcquisition</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirectURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirectURL</stringProp>
                  <stringProp name="Argument.value">https://www.amazon.com/Adjustable-Aluminum-Android-Smartphone-Desktop/dp/B087LNGM9R/ref=sr_1_3?dchild=1&amp;keywords=cell+phone+stand&amp;qid=1617136530&amp;sr=8-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="disableCSM" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">disableCSM</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="primeCampaignId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">primeCampaignId</stringProp>
                  <stringProp name="Argument.value">primeAcquisition_BBOP_desktop_ft</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/prime/pipeline/membersignup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI%2FcmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z%22%2C%22adElementId%22%3A%22ape_Detail_desktop-detail-ilm_desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22desktop-detail-ilm%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adProgramId%22%3A%221009%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce%20-%20universal%22%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQqWCOwNqhhGjyRblNCOsUSgAAAF4hNll3AEAAAH0AQZgQOM%22%2C%22adCreativeId%22%3A%2215992056601%22%2C%22adId%22%3A%226036699201%22%2C%22adNetwork%22%3A%22cs%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI/cmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z&quot;,&quot;adElementId&quot;:&quot;ape_Detail_desktop-detail-ilm_desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;desktop-detail-ilm&quot;},&quot;adCreativeMetaData&quot;:{&quot;adProgramId&quot;:&quot;1009&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce - universal&quot;,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QqWCOwNqhhGjyRblNCOsUSgAAAF4hNll3AEAAAH0AQZgQOM&quot;,&quot;adCreativeId&quot;:&quot;15992056601&quot;,&quot;adId&quot;:&quot;6036699201&quot;,&quot;adNetwork&quot;:&quot;cs&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22adElementId%22%3A%22desktopFooter%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22desktop-arbies%22%2C%22pageUrl%22%3A%22%22%2C%22searchTerms%22%3A%22U0VBUkNIX0tFWVdPUkRT%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22aax%22%2C%22adProgramId%22%3A1010%2C%22adImpressionId%22%3A%22%22%2C%22adCreativeId%22%3A%22%22%2C%22adId%22%3A%22%22%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;adElementId&quot;:&quot;desktopFooter&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;desktop-arbies&quot;,&quot;pageUrl&quot;:&quot;&quot;,&quot;searchTerms&quot;:&quot;U0VBUkNIX0tFWVdPUkRT&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;aax&quot;,&quot;adProgramId&quot;:1010,&quot;adImpressionId&quot;:&quot;&quot;,&quot;adCreativeId&quot;:&quot;&quot;,&quot;adId&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI%2FcmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z%22%2C%22adElementId%22%3A%22ape_Detail_dp-ads-center-promo_Desktop_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22dp-ads-center-promo%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQrj95q0Td07DjL5zehI7fdsAAAF4hNll3AEAAAH0AV437gs%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200061557464481%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI/cmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z&quot;,&quot;adElementId&quot;:&quot;ape_Detail_dp-ads-center-promo_Desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;dp-ads-center-promo&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=Qrj95q0Td07DjL5zehI7fdsAAAF4hNll3AEAAAH0AV437gs&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200061557464481}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cDovL2hwLXJldmlld3NtZWRsZXktbmEtMWIuaWFkLmFtYXpvbi5jb206ODA4MC9XRUItSU5GL3ZpZXdzL21lZGxleUFkYXB0aXZlQWRQYWdlVmlldy5qc3A%2FP3JlZiU1Rj1zciU1RjElNUYzJmRjaGlsZD0xJmtleXdvcmRzPWNlbGwlMjBwaG9uZSUyMHN0YW5kJnFpZD0xNjE3MTM2NTMwJnNyPTgtMw%3D%3D%22%2C%22adElementId%22%3A%22ape_Detail_customer-reviews-top_Glance_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22customer-reviews-top%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1002%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQlReYOf1zZN9lEnNB4ckElYAAAF4hNll3AEAAAH0AcqMXkM%22%2C%22adCreativeId%22%3A16494937201%2C%22adCreativeTemplateName%22%3A%22Image%22%2C%22adId%22%3A6380300201%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cDovL2hwLXJldmlld3NtZWRsZXktbmEtMWIuaWFkLmFtYXpvbi5jb206ODA4MC9XRUItSU5GL3ZpZXdzL21lZGxleUFkYXB0aXZlQWRQYWdlVmlldy5qc3A/P3JlZiU1Rj1zciU1RjElNUYzJmRjaGlsZD0xJmtleXdvcmRzPWNlbGwlMjBwaG9uZSUyMHN0YW5kJnFpZD0xNjE3MTM2NTMwJnNyPTgtMw==&quot;,&quot;adElementId&quot;:&quot;ape_Detail_customer-reviews-top_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;customer-reviews-top&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1002,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QlReYOf1zZN9lEnNB4ckElYAAAF4hNll3AEAAAH0AcqMXkM&quot;,&quot;adCreativeId&quot;:16494937201,&quot;adCreativeTemplateName&quot;:&quot;Image&quot;,&quot;adId&quot;:6380300201}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/aq-feedback/lazyLoad/handler/af-link-handler.html?pl=%7B%22adPlacementMetaData%22%3A%7B%22searchTerms%22%3A%22Y2VsbCBwaG9uZSBzdGFuZA%3D%3D%22%2C%22pageUrl%22%3A%22aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI%2FcmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z%22%2C%22adElementId%22%3A%22ape_Detail_ad-endcap-1_Glance_placement%22%2C%22pageType%22%3A%22Detail%22%2C%22slotName%22%3A%22ad-endcap-1%22%7D%2C%22adCreativeMetaData%22%3A%7B%22adNetwork%22%3A%22cs%22%2C%22adProgramId%22%3A1027%2C%22adImpressionId%22%3A%22https%3A%2F%2Faax-us-east.amazon-adsystem.com%2Fe%2Fxsp%2Fimp%3Fb%3DQpXWRo8PMPLpNny2VFxce5oAAAF4hNll3AEAAAH0Aa4n1Os%22%2C%22adCreativeTemplateName%22%3A%22Dynamic%20eCommerce_SD_CI_US_DESKTOP%22%2C%22adId%22%3A200050865584321%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">{&quot;adPlacementMetaData&quot;:{&quot;searchTerms&quot;:&quot;Y2VsbCBwaG9uZSBzdGFuZA==&quot;,&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwODdMTkdNOVI/cmVmJTVGPXNyJTVGMSU1RjMmZGNoaWxkPTEma2V5d29yZHM9Y2VsbCUyMHBob25lJTIwc3RhbmQmcWlkPTE2MTcxMzY1MzAmc3I9OC0z&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ad-endcap-1_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ad-endcap-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;,&quot;adProgramId&quot;:1027,&quot;adImpressionId&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/imp?b=QpXWRo8PMPLpNny2VFxce5oAAAF4hNll3AEAAAH0Aa4n1Os&quot;,&quot;adCreativeTemplateName&quot;:&quot;Dynamic eCommerce_SD_CI_US_DESKTOP&quot;,&quot;adId&quot;:200050865584321}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/aq-feedback/lazyLoad/handler/af-link-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://unagi-na.amazon.com/1/events/com.amazon.eel.SponsoredProductsEventTracking.prod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200056316166971&quot;,&quot;adIndex&quot;:&quot;0&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200040143649031&quot;,&quot;adIndex&quot;:&quot;1&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200021220389461&quot;,&quot;adIndex&quot;:&quot;2&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200037437709561&quot;,&quot;adIndex&quot;:&quot;3&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200041042028511&quot;,&quot;adIndex&quot;:&quot;4&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200026850664241&quot;,&quot;adIndex&quot;:&quot;5&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200056958234481&quot;,&quot;adIndex&quot;:&quot;6&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200055293116971&quot;,&quot;adIndex&quot;:&quot;7&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200062232178511&quot;,&quot;adIndex&quot;:&quot;8&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;4340618043045942&quot;,&quot;widgetName&quot;:&quot;sp_detail&quot;,&quot;adId&quot;:&quot;200055706757071&quot;,&quot;adIndex&quot;:&quot;9&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200037103559461&quot;,&quot;adIndex&quot;:&quot;0&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200039576036971&quot;,&quot;adIndex&quot;:&quot;1&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200043001004721&quot;,&quot;adIndex&quot;:&quot;2&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200056885904321&quot;,&quot;adIndex&quot;:&quot;3&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200039082644321&quot;,&quot;adIndex&quot;:&quot;4&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200045173889461&quot;,&quot;adIndex&quot;:&quot;5&quot;,&quot;eventType&quot;:&quot;2&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/events/com.amazon.eel.SponsoredProductsEventTracking.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://unagi-na.amazon.com/1/events/com.amazon.eel.SponsoredProductsEventTracking.prod" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200043163017441&quot;,&quot;adIndex&quot;:&quot;6&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200042209517171&quot;,&quot;adIndex&quot;:&quot;7&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200012875405151&quot;,&quot;adIndex&quot;:&quot;8&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;5729246197654838&quot;,&quot;widgetName&quot;:&quot;sp_detail_thematic&quot;,&quot;adId&quot;:&quot;200063125808611&quot;,&quot;adIndex&quot;:&quot;9&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200021220389461&quot;,&quot;adIndex&quot;:&quot;0&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200056316166971&quot;,&quot;adIndex&quot;:&quot;1&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200055706756971&quot;,&quot;adIndex&quot;:&quot;2&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200056850697231&quot;,&quot;adIndex&quot;:&quot;3&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200002427644451&quot;,&quot;adIndex&quot;:&quot;4&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200001842044251&quot;,&quot;adIndex&quot;:&quot;5&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200039077614321&quot;,&quot;adIndex&quot;:&quot;6&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200014893285021&quot;,&quot;adIndex&quot;:&quot;7&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200031921464821&quot;,&quot;adIndex&quot;:&quot;8&quot;,&quot;eventType&quot;:&quot;2&quot;}},{&quot;data&quot;:{&quot;qualifier&quot;:&quot;1617136543&quot;,&quot;id&quot;:&quot;8214870906427861&quot;,&quot;widgetName&quot;:&quot;sp_detail2&quot;,&quot;adId&quot;:&quot;200050101608511&quot;,&quot;adIndex&quot;:&quot;9&quot;,&quot;eventType&quot;:&quot;2&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/events/com.amazon.eel.SponsoredProductsEventTracking.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cart/ewc/compact?ie=UTF8&amp;hostPageRID=P3RWP34B2VKNS3PX167Q&amp;hostPageType=Detail&amp;storeName=electronics&amp;widerCompactView=true&amp;_=1617136546570" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widerCompactView" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">widerCompactView</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageType</stringProp>
                  <stringProp name="Argument.value">Detail</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">storeName</stringProp>
                  <stringProp name="Argument.value">electronics</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageRID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageRID</stringProp>
                  <stringProp name="Argument.value">P3RWP34B2VKNS3PX167Q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136546570</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/ewc/compact</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=P3RWP34B2VKNS3PX167Q&amp;page-type=Detail&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136546599" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">Detail</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">P3RWP34B2VKNS3PX167Q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136546599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/customer-reviews/aj/private/reviewsGallery/get-image-gallery-assets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/customer-reviews/aj/private/reviewsGallery/get-image-gallery-assets</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/customer-reviews/aj/private/reviewsGallery/get-application-resources-for-reviews-gallery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="noCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">noCache</stringProp>
                  <stringProp name="Argument.value">1617136547175</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/customer-reviews/aj/private/reviewsGallery/get-application-resources-for-reviews-gallery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://fls-na.amazon.com/1/batch/1/OE/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;P3RWP34B2VKNS3PX167Q&quot;,&quot;sid&quot;:&quot;144-7425314-1966119&quot;,&quot;mid&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;sn&quot;:&quot;www.amazon.com&quot;,&quot;reqs&quot;:[{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;baselineCounter2&quot;,&quot;value&quot;:1,&quot;t&quot;:1}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nexusBaselineCounter&quot;,&quot;value&quot;:1,&quot;t&quot;:1}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:hiResDesktop&quot;,&quot;value&quot;:0,&quot;t&quot;:32}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:pagejs:pkgExecTime&quot;,&quot;value&quot;:2.7350000018486753,&quot;t&quot;:33}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;csm.cookieSize&quot;,&quot;value&quot;:426,&quot;t&quot;:197}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:256}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:256}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:sfversion:1.50.71857ba&quot;,&quot;value&quot;:1,&quot;t&quot;:305}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:0,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:0,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:307}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;OIG.csm.common.rendered&quot;,&quot;value&quot;:1,&quot;t&quot;:703}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:0,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:0,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:745}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:745}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;productOverviewDesktopRendered&quot;,&quot;value&quot;:1,&quot;t&quot;:773}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:0,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:0,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:813}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:815}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:815}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp_aib_centerCol_height&quot;,&quot;value&quot;:831,&quot;t&quot;:817}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:1,&quot;t&quot;:830}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:2,&quot;t&quot;:831}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:3,&quot;t&quot;:832}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:4,&quot;t&quot;:832}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:5,&quot;t&quot;:833}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:6,&quot;t&quot;:834}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:7,&quot;t&quot;:834}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:8,&quot;t&quot;:834}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:9,&quot;t&quot;:834}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:10,&quot;t&quot;:835}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:11,&quot;t&quot;:835}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPIBBTFRegisterTime&quot;,&quot;value&quot;:1096,&quot;t&quot;:876}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:980}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:980}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:980}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:980}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;BuyBoxTabularLayoutDesktopDisplayed&quot;,&quot;value&quot;:1,&quot;t&quot;:1007}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickPreventMultiClickModuleCalled&quot;,&quot;value&quot;:1,&quot;t&quot;:1010}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QuantitySelector-TimeTo-JSReady&quot;,&quot;value&quot;:1030,&quot;t&quot;:1030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QuantitySelector-TimeTo-JSReadyHundredths&quot;,&quot;value&quot;:103,&quot;t&quot;:1030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1035}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1035}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetLeft:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:697,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetLeft:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:697,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetTop:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1077,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetTop:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1077,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetWidth:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:650,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetWidth:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:650,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetHeight:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:130,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:OffsetHeight:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:130,&quot;t&quot;:1036}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1037}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1037}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1037}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1037}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:12,&quot;t&quot;:1039}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPAiryDownloadStartTime&quot;,&quot;value&quot;:1260,&quot;t&quot;:1039}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:13,&quot;t&quot;:1039}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dyr_web_ingress_hidden&quot;,&quot;value&quot;:1,&quot;t&quot;:1063}},{&quot;csmcount&quot;:{&quot;value&quot;:1,&quot;t&quot;:1069}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;customerReviewsAttributeDesktopRender&quot;,&quot;value&quot;:1,&quot;t&quot;:1069}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;uss:compatibleBrowser&quot;,&quot;value&quot;:1,&quot;t&quot;:1077}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1078}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1078}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1078}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1078}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1080}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1080}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1082}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1082}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1082}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1082}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1085}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1085}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1199}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1199}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1211}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1211}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPLandingImageHighResDownloadTime&quot;,&quot;value&quot;:1460.2799999993294,&quot;t&quot;:1239}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;image_size_bucket:0-50&quot;,&quot;value&quot;:1,&quot;t&quot;:1247}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;altImageCount&quot;,&quot;value&quot;:8,&quot;t&quot;:1247}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;MagnifierImageDownload&quot;,&quot;value&quot;:1485.195000001113,&quot;t&quot;:1264}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcc_altThumbs_7&quot;,&quot;value&quot;:1,&quot;t&quot;:1267}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCFatcTTI&quot;,&quot;value&quot;:948,&quot;t&quot;:1271}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCFimageblockTTI&quot;,&quot;value&quot;:1489,&quot;t&quot;:1271}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1342}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1448}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1448}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1448}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1448}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:hero-quick-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:cf91057a-6347-4399-bbe2-523bf891ca57&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:ams-detail-right-v2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;value&quot;:1,&quot;t&quot;:1450}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:14,&quot;t&quot;:1700}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:15,&quot;t&quot;:1700}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:16,&quot;t&quot;:1702}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:17,&quot;t&quot;:1704}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:0,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:0,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:18,&quot;t&quot;:1942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:0,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:0,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:1960}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2059}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2059}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2060}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2060}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAssetTrigger&quot;,&quot;value&quot;:1,&quot;t&quot;:2061}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxBTFSize&quot;,&quot;value&quot;:143,&quot;t&quot;:2061}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxATFSize&quot;,&quot;value&quot;:189,&quot;t&quot;:2061}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dp:widget:dpxSize:dpxBTFSize&quot;,&quot;value&quot;:143,&quot;t&quot;:2063}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2063}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2063}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2064}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2064}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2064}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2064}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2066}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2066}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:19,&quot;t&quot;:2066}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageReady&quot;,&quot;value&quot;:2068,&quot;t&quot;:2068}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickDesktopAddToCartButtonPresent&quot;,&quot;value&quot;:1,&quot;t&quot;:2083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;oneClickDesktopBuyNowButtonPresent&quot;,&quot;value&quot;:1,&quot;t&quot;:2084}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAddressSelectorIndex0&quot;,&quot;value&quot;:1,&quot;t&quot;:2087}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutAddressSelectorIndex0_time&quot;,&quot;value&quot;:2087,&quot;t&quot;:2087}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageStates&quot;,&quot;value&quot;:1,&quot;t&quot;:2088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutPageStates_time&quot;,&quot;value&quot;:2088,&quot;t&quot;:2088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutProductStates&quot;,&quot;value&quot;:1,&quot;t&quot;:2088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutProductStates_time&quot;,&quot;value&quot;:2088,&quot;t&quot;:2088}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutBuyNowButtonBound&quot;,&quot;value&quot;:1,&quot;t&quot;:2089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutBuyNowButtonBound_time&quot;,&quot;value&quot;:2089,&quot;t&quot;:2089}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutControllerPageLoaded&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutControllerPageLoaded_time&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time.wl:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopAuiVariantEligible_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time.wl:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutDesktopUserAgentEligible_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time.wl:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutEnabledTurboDesktopOnDevice_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2091,&quot;t&quot;:2091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes&quot;,&quot;value&quot;:1,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time&quot;,&quot;value&quot;:2095,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes.wl:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time.wl:T2&quot;,&quot;value&quot;:2095,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:1,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;turboCheckoutQuantityNodes_time.RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784:T2&quot;,&quot;value&quot;:2095,&quot;t&quot;:2095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:notenabled:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:enabled:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:0,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:0,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:abpstatus:unknown:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:0,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:start:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;d16g_postMessageSupported&quot;,&quot;value&quot;:1,&quot;t&quot;:2099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DetailPageMetaAssetFixed.duration&quot;,&quot;value&quot;:46.80999999982305,&quot;t&quot;:2100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DetailPageMetaAssetFixed.startTime&quot;,&quot;value&quot;:244.5850000003702,&quot;t&quot;:2100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetFixed.duration&quot;,&quot;value&quot;:58.710000001156004,&quot;t&quot;:2109}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetFixed.startTime&quot;,&quot;value&quot;:245.0250000001688,&quot;t&quot;:2109}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn.duration&quot;,&quot;value&quot;:81.2450000012177,&quot;t&quot;:2126}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn.startTime&quot;,&quot;value&quot;:245.27500000112923,&quot;t&quot;:2126}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.duration&quot;,&quot;value&quot;:61.81000000287895,&quot;t&quot;:2153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.startTime&quot;,&quot;value&quot;:183.12499999956344,&quot;t&quot;:2153}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2197}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2197}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2198}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2200}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2200}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;totalImages&quot;,&quot;value&quot;:98,&quot;t&quot;:2206}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;page module&quot;,&quot;t&quot;:2213}},{&quot;cel&quot;:{&quot;k&quot;:&quot;pmd&quot;,&quot;o&quot;:&quot;https://www.amazon.com&quot;,&quot;p&quot;:&quot;/Adjustable-Aluminum-Android-Smartphone-Desktop/dp/B087LNGM9R/ref=sr_1_3&quot;,&quot;t&quot;:2213}},{&quot;cel&quot;:{&quot;w&quot;:1920,&quot;aw&quot;:1920,&quot;h&quot;:1080,&quot;ah&quot;:1040,&quot;cd&quot;:24,&quot;pd&quot;:24,&quot;t&quot;:2213,&quot;k&quot;:&quot;sci&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1903,&quot;h&quot;:11197,&quot;t&quot;:2214,&quot;k&quot;:&quot;doi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;page module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;viewport module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;w&quot;:1920,&quot;h&quot;:937,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:2214,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;viewport module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;features module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;features module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;mouse click module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;mouse click module&quot;,&quot;t&quot;:2214}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mrg&quot;,&quot;n&quot;:&quot;mouse move module&quot;,&quot;t&quot;:2215}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mso&quot;,&quot;n&quot;:&quot;mouse move module&quot;,&quot;t&quot;:2215}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:csm.CSMBaselineEvent.4&quot;,&quot;value&quot;:1,&quot;t&quot;:2215}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2316}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:delayloadcallback:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2316}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframecreated:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:1,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:2,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:3,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:4,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:5,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:6,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:7,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:8,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:9,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:10,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:11,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:12,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:13,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:14,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:15,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:16,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:17,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:18,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:19,&quot;t&quot;:2317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:20,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:21,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:22,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:23,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:24,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:25,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:26,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:27,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:20,&quot;t&quot;:2318}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.Impressions.5&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:basebe.VisualCompleteness.6&quot;,&quot;value&quot;:1,&quot;t&quot;:2319}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2369}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2370}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2379}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2379}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2380}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2380}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2393}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2393}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1&quot;,&quot;value&quot;:1,&quot;t&quot;:2409}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1:tabular-buybox-truncate-0&quot;,&quot;value&quot;:1,&quot;t&quot;:2409}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2591}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2591}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2591}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2591}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2592}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2592}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2592}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2592}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2594}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2594}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2595}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2595}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2606}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2606}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2606}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2606}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2607}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2607}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2607}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2607}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2611}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2611}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:comparison.dpTableImpression.1&quot;,&quot;value&quot;:1,&quot;t&quot;:2631}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;tradeIn_widgetContextMissing&quot;,&quot;value&quot;:1,&quot;t&quot;:2647}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;vse:csm:vse-player-initialized&quot;,&quot;value&quot;:1,&quot;t&quot;:2654}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;vse:csm:rvs.requestToReadyDuration&quot;,&quot;value&quot;:960,&quot;t&quot;:2661}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;vse:csm:rvs.requestToInitDuration&quot;,&quot;value&quot;:956,&quot;t&quot;:2661}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;vse:csm:rvs.initToReadyDuration&quot;,&quot;value&quot;:4,&quot;t&quot;:2661}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;CustomerReviews:LazyWidgetTrigger&quot;,&quot;value&quot;:0,&quot;t&quot;:2662}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;tradeIn_widgetContextMissing&quot;,&quot;value&quot;:2,&quot;t&quot;:2665}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;sp_detail.adb&quot;,&quot;value&quot;:1,&quot;t&quot;:2675}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;sp_detail_thematic.adb&quot;,&quot;value&quot;:0,&quot;t&quot;:2675}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;sp_detail2.adb&quot;,&quot;value&quot;:1,&quot;t&quot;:2678}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;vse:brila:plugins&quot;,&quot;value&quot;:1,&quot;t&quot;:2704}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2781}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2781}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_amzn:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2781}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_amzn:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2781}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_amzn:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_amzn:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2809}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:loaded:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2810}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:htmlviewed:loaded:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2810}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2810}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:2810}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:iframeinitialized:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:request:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderstart:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:renderend:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2921}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:renderad:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionfired:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2922}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2923}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:creativewritten:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2923}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:2924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:2924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:2928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:1,&quot;t&quot;:2930}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:2,&quot;t&quot;:2931}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:3,&quot;t&quot;:2931}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:4,&quot;t&quot;:2932}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:5,&quot;t&quot;:2932}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:6,&quot;t&quot;:2932}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:7,&quot;t&quot;:2933}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:8,&quot;t&quot;:2933}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:9,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail-totalAds&quot;,&quot;value&quot;:10,&quot;t&quot;:2934}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:1,&quot;t&quot;:2936}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:2,&quot;t&quot;:2937}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:3,&quot;t&quot;:2938}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:4,&quot;t&quot;:2939}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:5,&quot;t&quot;:2940}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:6,&quot;t&quot;:2941}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:7,&quot;t&quot;:2942}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:8,&quot;t&quot;:2944}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:9,&quot;t&quot;:2946}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail_thematic-totalAds&quot;,&quot;value&quot;:10,&quot;t&quot;:2948}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:1,&quot;t&quot;:2950}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:2,&quot;t&quot;:2951}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:3,&quot;t&quot;:2953}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:4,&quot;t&quot;:2954}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:5,&quot;t&quot;:2955}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:6,&quot;t&quot;:2956}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:7,&quot;t&quot;:2958}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:8,&quot;t&quot;:2959}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:9,&quot;t&quot;:2961}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPView-sp_detail2-totalAds&quot;,&quot;value&quot;:10,&quot;t&quot;:2963}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2973}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:impressionloaded:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2973}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2976}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2976}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2976}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2977}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:2977}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:ResourceTimingData.DependenciesNotMet:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:2977}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1&quot;,&quot;value&quot;:2,&quot;t&quot;:3060}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DesktopTabularContentExpanded:T1:tabular-buybox-truncate-1&quot;,&quot;value&quot;:1,&quot;t&quot;:3060}},{&quot;cel&quot;:{&quot;w&quot;:1903,&quot;h&quot;:11389,&quot;t&quot;:3066,&quot;k&quot;:&quot;doi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:3100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:dp-ads-center-promo:Desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3101}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;value&quot;:1,&quot;t&quot;:3101}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:customer-reviews-top:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3101}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;value&quot;:1,&quot;t&quot;:3101}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3113}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:success:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3113}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3204}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityfired:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3204}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:CSM:Latency:PreloadSprite:desktop&quot;,&quot;value&quot;:237,&quot;t&quot;:3205}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgRequestFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3213}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgEventFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3213}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-batchSuccess&quot;,&quot;value&quot;:16,&quot;t&quot;:3213}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:Detail:ad-endcap-1:Glance&quot;,&quot;value&quot;:1,&quot;t&quot;:3220}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:measurabilityloaded:6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;value&quot;:1,&quot;t&quot;:3220}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgRequestFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3220}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-avgEventFailurePerPage&quot;,&quot;value&quot;:0,&quot;t&quot;:3220}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;SPBatch-batchSuccess&quot;,&quot;value&quot;:14,&quot;t&quot;:3220}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_bestsellers_22595f4f23134e4aa687cca616dd2701&quot;,&quot;value&quot;:1,&quot;t&quot;:3226}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_gb_8b76f3deb4464058af8eb975e65f885d&quot;,&quot;value&quot;:1,&quot;t&quot;:3226}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_primelink_nonmember_8493a4e26fe645e39b392d27f8327e9c&quot;,&quot;value&quot;:1,&quot;t&quot;:3226}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_customerservice_74bebff5eab64735882e87c98f865eb7&quot;,&quot;value&quot;:1,&quot;t&quot;:3226}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_newreleases_524cc40c03954987aed60c546996105e&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_books_788dc1d04dfe44a2b3249e7a7c245230&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_fashion_dd35c91e68cd43a889bbbb227e6295b8&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_kindle_books_6395eddc526040139c7ee602774c5efd&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_gc_48b1fd0bb4a14f06a105c7a095311e83&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_toys_7ae6208bf21c4a59b9006b1891f7d18a&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_home_79f3fa5ce5d64264879d22257c8fffd0&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_giftfinder_797116a77f3e41e9b8bf175add187a06&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_pc_a688c2995a024557843f3f75d99473ca&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_pharmacy_5cb98718aca04923b39e03a1e97f0e41&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_sell_a442dc5834174a7685307217f8a2ee0b&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Xshop:Impression:nav_cs_registry_63fbadf847fd4d7c93b19910a311037b&quot;,&quot;value&quot;:1,&quot;t&quot;:3227}},{&quot;navigation&quot;:{&quot;quirks&quot;:0}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-prime-attach-latency&quot;,&quot;value&quot;:2983,&quot;t&quot;:3237}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-accountList-attach-latency&quot;,&quot;value&quot;:2984,&quot;t&quot;:3238}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-groceries-attach-latency&quot;,&quot;value&quot;:2986,&quot;t&quot;:3240}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-transientFlyout-attach-latency&quot;,&quot;value&quot;:2987,&quot;t&quot;:3241}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-fresh-attach-latency&quot;,&quot;value&quot;:2988,&quot;t&quot;:3242}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abAcquisition-attach-latency&quot;,&quot;value&quot;:2989,&quot;t&quot;:3243}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abActivation-attach-latency&quot;,&quot;value&quot;:2990,&quot;t&quot;:3244}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-abAccountLink-attach-latency&quot;,&quot;value&quot;:2991,&quot;t&quot;:3245}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-ewc-show&quot;,&quot;value&quot;:1,&quot;t&quot;:3250}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-ewc-detail-show&quot;,&quot;value&quot;:1,&quot;t&quot;:3250}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3260}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:ajax:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3260}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-api-v2:init&quot;,&quot;value&quot;:1,&quot;t&quot;:3264}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;MagnifierImageDownload&quot;,&quot;value&quot;:3509.9650000011025,&quot;t&quot;:3289}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;iss-warmup:ajax:success&quot;,&quot;value&quot;:1,&quot;t&quot;:3374}},{&quot;navigation&quot;:{&quot;t&quot;:&quot;ssl&quot;,&quot;id&quot;:&quot;1-flyoutProximityLarge&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_iab:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3409}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityfired_iab:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3409}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_iab:Detail:desktop-detail-ilm:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3441}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:viewabilityloaded_iab:cf81795d-ef39-406a-ad7e-6538fcad65f8&quot;,&quot;value&quot;:1,&quot;t&quot;:3441}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:2875,&quot;t&quot;:3494}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;snsBuyBoxNotVisibleOnDetailPage&quot;,&quot;value&quot;:1,&quot;t&quot;:3500}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:aui-supported-rupee&quot;,&quot;value&quot;:1,&quot;t&quot;:3560}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.auiDuration&quot;,&quot;value&quot;:46.95499999797903,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui.auiStartTime&quot;,&quot;value&quot;:244.78500000259373,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.dpStartTimeMin&quot;,&quot;value&quot;:244.5850000003702,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.dpStartTimeMax&quot;,&quot;value&quot;:245.60000000201399,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.auiDiffMin&quot;,&quot;value&quot;:-0.20000000222353265,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;dpcss.auiDiffMax&quot;,&quot;value&quot;:0.8149999994202517,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPEncodedSize&quot;,&quot;value&quot;:237,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPDecodedSize&quot;,&quot;value&quot;:1101,&quot;t&quot;:3564}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedUSHardlinesDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedDetailPageDesktopImageBlockMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedUSHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedInstallmentPaymentDetailPageMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPjsNotCachedPageRefreshAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUICalendar1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedUSHardlinesDetailPageMetaAssetFixed1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedUSHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageAllOffersDisplayAssets1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedDetailPageDesktopTwisterMetaAsset1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUI1&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPcssNotCachedAmazonUI2&quot;,&quot;value&quot;:1,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSEncodeSize&quot;,&quot;value&quot;:452,&quot;t&quot;:3565}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSDecodeSize&quot;,&quot;value&quot;:1776,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSEncodeSize&quot;,&quot;value&quot;:97,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSDecodeSize&quot;,&quot;value&quot;:539,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;AUICSSEncodeSize&quot;,&quot;value&quot;:28,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;AUICSSDecodeSize&quot;,&quot;value&quot;:172,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPCSSResourceCount&quot;,&quot;value&quot;:6,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;DPJSResourceCount&quot;,&quot;value&quot;:5,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:21,&quot;t&quot;:3566}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:ATF:desktop&quot;,&quot;value&quot;:49,&quot;t&quot;:3569}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:CF:desktop&quot;,&quot;value&quot;:50,&quot;t&quot;:3570}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:PageLoaded:desktop&quot;,&quot;value&quot;:52,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TotalCallCount:PageLoaded:desktop&quot;,&quot;value&quot;:1260,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:network:D:desktop&quot;,&quot;value&quot;:130,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:navFirstPaint:D:desktop&quot;,&quot;value&quot;:328,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavStart:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:D:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:D:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:C:desktop&quot;,&quot;value&quot;:238,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:D:desktop&quot;,&quot;value&quot;:6,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:C:desktop&quot;,&quot;value&quot;:245,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:D:desktop&quot;,&quot;value&quot;:2,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:C:desktop&quot;,&quot;value&quot;:247,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:C:desktop&quot;,&quot;value&quot;:248,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:C:desktop&quot;,&quot;value&quot;:249,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:C:desktop&quot;,&quot;value&quot;:249,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Subnav:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Subnav:C:desktop&quot;,&quot;value&quot;:249,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:D:desktop&quot;,&quot;value&quot;:15,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:C:desktop&quot;,&quot;value&quot;:253,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:D:desktop&quot;,&quot;value&quot;:253,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:C:desktop&quot;,&quot;value&quot;:253,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:D:desktop&quot;,&quot;value&quot;:253,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:C:desktop&quot;,&quot;value&quot;:253,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:D:desktop&quot;,&quot;value&quot;:254,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:C:desktop&quot;,&quot;value&quot;:254,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-attach-latency&quot;,&quot;value&quot;:3318,&quot;t&quot;:3572}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-footer-flyout-attach-latency&quot;,&quot;value&quot;:3321,&quot;t&quot;:3575}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:resource_count&quot;,&quot;value&quot;:22,&quot;t&quot;:3670}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-navbar&quot;,&quot;w&quot;:1803,&quot;h&quot;:132,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;nav-sprite-v1 celwidget nav-bluebeacon nav-a11y-t1 bold-focus-hover layout2 nav-flex layout3 layout3-alt nav-fresh nav-packard-glow hamburger nav-progressive-attribute&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ewc-loaded&quot;,&quot;w&quot;:100,&quot;h&quot;:937,&quot;d&quot;:0,&quot;x&quot;:1804,&quot;y&quot;:0,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;ewc-compact sc-java-remote-feature celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-atf_ad-placements-desktop-ilm-ct_amazon_us_Detail_desktop_desktop-detail-ilm_1009&quot;,&quot;w&quot;:1500,&quot;h&quot;:55,&quot;d&quot;:0,&quot;x&quot;:151.5,&quot;y&quot;:132,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-0ApFI pf_rd_p-142574a6-fe9d-4026-b292-2b10f27a3071 pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-9cbcd8f4-2206-471f-ae71-babe1aeb16a4 pd_rd_wg-dFVC3&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:desktop-detail-ilm:desktop&quot;,&quot;w&quot;:1920,&quot;h&quot;:55,&quot;d&quot;:0,&quot;x&quot;:-58.5,&quot;y&quot;:132,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;orderInformationGroup&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;companyCompliancePolicies_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;attachAccessoryModal_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tellAFriendBox_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;trustBadge_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_buybox&quot;,&quot;w&quot;:244,&quot;h&quot;:854.21875,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;qualifiedBuybox&quot;,&quot;w&quot;:244,&quot;h&quot;:854.21875,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;booksHeaderInfoContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:244,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;priceInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:244,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_qualifiedBuyBox&quot;,&quot;w&quot;:206,&quot;h&quot;:740.21875,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;booksAdditionalPriceInfoContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;invitePlatform_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pointsInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;agsShippingAndIfdInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;shippingMessageInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:272,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-anchorText-pc&quot;,&quot;w&quot;:100.109375,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1422.453125,&quot;y&quot;:313,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-popover-pc&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;couponsInBuybox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:344,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryBlockContainer&quot;,&quot;w&quot;:206,&quot;h&quot;:182,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:344,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryBlock_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:152,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:344,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cipInsideDeliveryBlock_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:508,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deliveryPromiseInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePropT1_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deepCheckPromiseInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promiseBasedBadgeInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promoPriceBlockMessage_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addOnMessage_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;availabilityInsideBuyBox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:538,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreBadgePopoverInsideBuybox_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:574,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityRelocate_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:22.453125,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:574,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;soldByThirdPartyRelocate_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:608.453125,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToCart_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:31,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:608.453125,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;buyNow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:31,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:647.453125,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:21.453125,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:690.453125,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:206,&quot;h&quot;:21.453125,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:690.453125,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section a-spacing-small a-text-left celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction-celwidget-popover-inner&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tabular_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:38,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:719.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sellerCertifications_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePropT2_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;hbaLabel_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tradeInInstantSavings_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityLayoutHigh_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bbop_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:198.3125,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:769.90625,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;voltageCompliance_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;businessPricing_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;soldByThirdParty_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;scheduledDelivery_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bbg_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;mbb_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_productInsurance_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityLayoutLow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;simpleBundleV2_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;asg_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToCart_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;preAddToCartFramework_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;buyNow_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;secureTransaction_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;oneClick_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;detailPageGifting_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:40,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:972.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;makoPreRegistration&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;accessoryUpsellAmabot_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;accessoryUpsellBtf_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;unifiedLocation_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;digitalDashHighProminence_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;marsAccessoryUpsell_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToWishlist_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:44,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1024.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addToRegistry_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1068.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;digitalDashLowProminence_feature_div&quot;,&quot;w&quot;:206,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1408.5,&quot;y&quot;:1068.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;olpLinkWidget_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tellAFriendBox_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:19,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tell-a-friend-desktop&quot;,&quot;w&quot;:244,&quot;h&quot;:19,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1097.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;almMultiOfferEgress_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;redirection_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;crossBorderWidget_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;tradeInButton_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1124.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;moreBuyingChoices_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:71,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1128.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;product-ads-feedback_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amsDetailRight_feature_div&quot;,&quot;w&quot;:244,&quot;h&quot;:264,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:ams-detail-right-v2:desktop&quot;,&quot;w&quot;:244,&quot;h&quot;:264,&quot;d&quot;:0,&quot;x&quot;:1389.5,&quot;y&quot;:1215.21875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;imageBlock_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:480,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;spin360_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:731,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smileCodeIngress_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:731,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;energyEfficiency_feature_div&quot;,&quot;w&quot;:505.078125,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:731,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;title_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:96,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:229,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bylineInfo_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:325,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;averageCustomerReviews_feature_div&quot;,&quot;w&quot;:201.703125,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:345,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask_feature_div&quot;,&quot;w&quot;:162.890625,&quot;h&quot;:20,&quot;d&quot;:0,&quot;x&quot;:901.90625,&quot;y&quot;:345,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-atf-link-desktop&quot;,&quot;w&quot;:145.28125,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:919.515625,&quot;y&quot;:346,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:365,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;climatePledgeFriendlyATF_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:365,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;zeitgeistBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:365,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;socialFabric_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:365,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;delightPricingBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:380,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop_unifiedPrice&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:380,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;unifiedPrice_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:24,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:380,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-anchorText-pc&quot;,&quot;w&quot;:84.0625,&quot;h&quot;:18,&quot;d&quot;:0,&quot;x&quot;:1095.3125,&quot;y&quot;:384,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;free-returns-policy-popover-pc&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;quantityPricingTableSummary_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promoPriceBlockMessage_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;b2bUpsell_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pmpux_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;issuancePriceblockAmabot_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;maple-banner-priceblock&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;maple-banner-priceblock-MAPLE-I-acvfDu6NBV-P-MacGLiPqFt&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:60,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:412,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;iconfarmv2_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;alternativeOfferEligibilityMessaging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promiseBasedBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;applicablePromotionList_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;availability_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreBadgePopover_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpFastTrack_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;deepCheckPromise_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;credentialBasedBadging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;shipsFromSoldBy_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productSupportAndReturnPolicy_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;businessPricing_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smileEligibility_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;holidayAvailabilityMessage_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twister_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valueAdds_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;clickToContact_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpreviewBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;smartHomeWidget_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amazonCertifiedBadge_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;renewedProgramDescriptionAtf_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:472,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productOverview_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:124,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:480,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;featurebullets_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:263,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:612,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;globalStoreInfoBullets_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:891,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;vendorPoweredCoupon_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;addOnItem_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;giftcard-holiday-availability-messaging_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;andonCord_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;olp_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;edpIngress_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;newerVersion_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePick_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:161,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;valuePick_desktop_container&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:161,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:919,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_i-B07X5YJQW9 pd_rd_w-ellQn pf_rd_p-d5fb8e21-1b9d-4fa6-9105-a64f0e1c946c pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-26871a4e-5980-4a3d-b081-a6efdb518533 pd_rd_wg-CYgAH &quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;certifiedRefurbishedVersion_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;recommendations_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productAlert_feature_div&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotionalAddon_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotionalBundle_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;heroQuickPromo_feature_div&quot;,&quot;w&quot;:666.96875,&quot;h&quot;:172,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1088,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:hero-quick-promo:Desktop&quot;,&quot;w&quot;:650,&quot;h&quot;:155,&quot;d&quot;:0,&quot;x&quot;:696.53125,&quot;y&quot;:1105,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twisterJsInitializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;imageBlockVariations_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;pageRefreshJsInitializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;emit-js_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;bundleV2_feature_div&quot;,&quot;w&quot;:1200,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:297.921875,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-1_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:297.921875,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_fbt&quot;,&quot;w&quot;:1464,&quot;h&quot;:297.921875,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1281,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-j4o89 pf_rd_p-f325d01c-4658-4593-be83-3e12ca663f0e pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-c1d4f9f4-6814-4531-aaea-4812e3216a91 pd_rd_wg-Wn0Io&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1578.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-2_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1578.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_SponsoredProductsSimsDpDesktop&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1578.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-oLd5T pf_rd_p-4269e1a0-a218-4fbd-9748-1cd337d2f2a5 pd_rd_wg-Wn0Io pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-c1d4f9f4-6814-4531-aaea-4812e3216a91&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sp_detail&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1578.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1977.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-3_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1977.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_SponsoredProductsSimsDpDesktopThematic&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1977.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-db8Ih pf_rd_p-cbc856ed-1371-4f23-b89d-d3fb30edf66d pd_rd_wg-Wn0Io pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-c1d4f9f4-6814-4531-aaea-4812e3216a91&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sp_detail_thematic&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:1977.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cpsiaProductSafetyWarning_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-cpsia-product-safety-warning_DetailPage_0&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget c-f&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;legal_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;importantInformation_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-center-promo-top_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;miraiBTFShopByLook_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;promotions_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;climatePledgeFriendlyBTF_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-dp-search_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:140,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-swdp-desktop&quot;,&quot;w&quot;:1464,&quot;h&quot;:140,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2376.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplusBrandStory_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplus3p_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;aplusSustainabilityStory_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;technical-data_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;HLCXComparisonWidget_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:1438,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:2548.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDescription_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:255,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4018.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;renewedProgramDescriptionBtf_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4273.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDetails_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:411,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4273.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDocuments_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4684.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;va-related-videos-widget_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:409,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4684.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ask-btf_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:440,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5115.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cf-ask-cel&quot;,&quot;w&quot;:1464,&quot;h&quot;:440,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5115.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;services-widget-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5555.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;services-widget-2_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5555.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;click-to-call_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5555.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sponsoredProducts2_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5555.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sp_detail2&quot;,&quot;w&quot;:1464,&quot;h&quot;:380,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5555.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ad-display-center-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5954.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;center-28_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5954.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-center-promo_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:283,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:5954.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:dp-ads-center-promo:Desktop&quot;,&quot;w&quot;:970,&quot;h&quot;:268,&quot;d&quot;:0,&quot;x&quot;:416.5,&quot;y&quot;:5969.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dpreviewSummary_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:6237.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer-reviews_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:3568.421875,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:6237.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:customer-reviews-top:Glance&quot;,&quot;w&quot;:300,&quot;h&quot;:280,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:6640.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer-reviews-content&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:606.40625,&quot;y&quot;:6491.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-link-normal celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:680,&quot;h&quot;:2578,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:6584.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section a-spacing-large reviews-content filterable-reviews-content celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cm-cr-dp-review-list&quot;,&quot;w&quot;:680,&quot;h&quot;:2578,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:6584.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section review-views celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R2R0WB5OAOU36G&quot;,&quot;w&quot;:680,&quot;h&quot;:249,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:6584.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R3V2WI34LLJ30&quot;,&quot;w&quot;:680,&quot;h&quot;:209,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:6855.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R1W40M7WFT0XB&quot;,&quot;w&quot;:680,&quot;h&quot;:377,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:7086.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R1MMVQ53X5VHDD&quot;,&quot;w&quot;:680,&quot;h&quot;:269,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:7485.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R3FVIHJU3WFA84&quot;,&quot;w&quot;:680,&quot;h&quot;:441,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:7776.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R3FD3K309V27N8&quot;,&quot;w&quot;:680,&quot;h&quot;:209,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:8239.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-R2O9O1ZAV0ASLA&quot;,&quot;w&quot;:680,&quot;h&quot;:409,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:8470.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review-RWPVTWFIGTRJI&quot;,&quot;w&quot;:680,&quot;h&quot;:261,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:8901.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:680,&quot;h&quot;:467,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:9315.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section global-reviews-content celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cm-cr-global-review-list&quot;,&quot;w&quot;:680,&quot;h&quot;:467,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:9315.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section global-review-views review-views celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review_foreign-RCYHGVB1VITS9&quot;,&quot;w&quot;:680,&quot;h&quot;:200,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:9315.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;customer_review_foreign-R3J2DKB3DJVG5C&quot;,&quot;w&quot;:680,&quot;h&quot;:180,&quot;d&quot;:0,&quot;x&quot;:606.40625,&quot;y&quot;:9537.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-section celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;detail-page-cf-marker_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;page-refresh-js-initializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;jquery-available_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;amazonjq-section_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cloudfront-web-bug_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;twister-js-initializer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ajaxBlockComponents_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dp-ads-middle_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;similarities_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:243,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sims-consolidated-4_csm_instrumentation_wrapper&quot;,&quot;w&quot;:1464,&quot;h&quot;:243,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-dp-sims_sb-dp-id&quot;,&quot;w&quot;:1464,&quot;h&quot;:243,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget pd_rd_w-KSkFa pf_rd_p-a9e4210c-3a3e-49a7-8503-29c551dcdaee pd_rd_wg-Wn0Io pf_rd_r-P3RWP34B2VKNS3PX167Q pd_rd_r-c1d4f9f4-6814-4531-aaea-4812e3216a91&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktopCombined&quot;,&quot;w&quot;:1464,&quot;h&quot;:243,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9838.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;threepsl  MultiBrandCreativeDesktop celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:472,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:9906.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:472,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:665.5,&quot;y&quot;:9906.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;MultiBrandCreativeDesktop&quot;,&quot;w&quot;:472,&quot;h&quot;:175,&quot;d&quot;:0,&quot;x&quot;:1161.5,&quot;y&quot;:9906.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;sb_ZcnsR4zE sb_37u_8SFq celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;sponsored-products-logger_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10106.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ad-endcap-1_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:108,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10106.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Detail:ad-endcap-1:Glance&quot;,&quot;w&quot;:728,&quot;h&quot;:108,&quot;d&quot;:0,&quot;x&quot;:537.5,&quot;y&quot;:10106.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;seo-related-keywords-pages_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;storeDisclaimer_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;registry-sable-update_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;emit-js_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;log-metrics_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;log-detail-page-metrics_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:0,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:10214.34375,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;wayfinding-breadcrumbs_feature_div&quot;,&quot;w&quot;:1468,&quot;h&quot;:14,&quot;d&quot;:0,&quot;x&quot;:167.5,&quot;y&quot;:195,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-subheader a-breadcrumb feature&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;productDescription_feature_div&quot;,&quot;w&quot;:1464,&quot;h&quot;:255,&quot;d&quot;:0,&quot;x&quot;:169.5,&quot;y&quot;:4018.921875,&quot;t&quot;:3645,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-row feature&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;ewc-smart-wagon&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:3830,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget aok-hidden&quot;}},{&quot;navigation&quot;:{&quot;t&quot;:&quot;ewc&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:4710}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:1,&quot;l&quot;:{&quot;csmcount&quot;:557,&quot;cel&quot;:257,&quot;navigation&quot;:3,&quot;csm&quot;:1},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:87950}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;loF5DEW0#us.123392-T1.317114-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loF5DEW0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loF5DEW0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31gw8TiisXL._RC%7C31B0vm3aOQL.js,71njUJ7+LtL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js?AUIClients/AmazonUI&amp;Dj66etiu#319488-T1.309035-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Dj66etiu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Dj66etiu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61-6nKPKyWL._RC%7C11Y+5x+kkTL.js,51IWYO5M+zL.js,112nmCqUymL.js,11giXtZCwVL.js,01+z+uIeJ-L.js,014NohEdE7L.js,21NNXfMitSL.js,11GXfd3+z+L.js,51gm4oPD2cL.js,11AHlQhPRjL.js,11UNQpqeowL.js,11OREnu1epL.js,11KbZymw5ZL.js,21r53SJg7LL.js,0190vxtlzcL.js,51bbIMIQQwL.js,3109-RXWZcL.js,015c-6CIP9L.js,01ezj5Rkz1L.js,11VS-C+YWGL.js,31pOTH2ZMRL.js,01rpauTep4L.js,01zbcJxtbAL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,316nVZ1c+gL.js,21t09Kpi1AL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,41Zy3sUeVDL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,21mWHADpIYL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;Y/bAGNBw#desktop.us.229463-T1.312885-T1.195406-C.316933-T1.290748-T1.317011-T1.315969-T1.287015-T2.291749-T1.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.155175-T1.262481-T1.271356-T1.286343-T1.324832-T1.172346-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Y/bAGNBw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Y/bAGNBw</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C11DbyV7EqEL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,316nVZ1c+gL.js,21t09Kpi1AL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,612N12HQlLL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,0193uyIciNL.js,41fW1gpnNZL.js,41Zy3sUeVDL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,614laSAkMiL.js,01j1Y1PFCRL.js,11+dypSOVUL.js,21mWHADpIYL.js,11G4c43OZvL.js,217x2gtF0XL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,01JzE3-DfLL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11WPSuNg4JL.js,11qajewhV-L.js,41YD13pEeXL.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,01jEIwUjmbL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01YXz0HO1fL.css?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01YXz0HO1fL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/218Y6Z0tipL._RC%7C11ikU6MX1JL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21ByukFKG4L.css,01DeBJ5q9YL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,31FQQQnSaCL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31TbF8vSUbL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetFixed&amp;lZ3AZUBP#desktop.us.164396-T1.164400-T1.232594-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.155175-T1.262481-T1.271356-T1.286343-T1.237189-T1.172346-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lZ3AZUBP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lZ3AZUBP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/218Y6Z0tipL._RC%7C11ikU6MX1JL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21ByukFKG4L.css,01DeBJ5q9YL.css,0121zKjk26L.css,11xRy3bSkOL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,01QUs5FVXoL.css,11MXghh1eBL.css,11jG57OztzL.css,41vOQb1k0LL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,31FQQQnSaCL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,4130GA9KMiL.css,01czYle8OiL.css,11kmwdXfY5L.css,31TbF8vSUbL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,015FNYa5WbL.css,01lHbKl4MxL.css,017KStdmPkL.css,21jUQU6VhYL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,21qOGqjcM7L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;YTNlgBXW#desktop.us.320228-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.315969-T1.312547-T1.287015-T2.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="YTNlgBXW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">YTNlgBXW</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21TMrbNilEL.js,21YblE14ZTL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01kTERBenQL.js,71EA77kZwfL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,11+dypSOVUL.js,01X2zigX4kL.js,21pWDYha7OL.js,31vMFUg376L.js,01OtvpwikQL.js,31X6Dg1fL8L.js,217XOv1WjVL.js,41YD13pEeXL.js,11p0nLfNCcL.js,11iHZuQapKL.js,21qOGqjcM7L.js,01GhKb2usNL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,51+kpt7cxwL.js,019W6kk1gjL.js,01hkseOXj6L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,218Y6Z0tipL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01DeBJ5q9YL.css,21UvDaNT8uL.css,21ByukFKG4L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,114HJAY+ShL.css,01MLzcotflL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31YeUjpBngL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01zmYtfbgDL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;mXDmzt/0#desktop.us.263677-T2.113788-C.232594-T1.287015-T2.310456-T1.237182-T1.172402-T1.317114-T1.337466-T1.311866-T1.211070-T1.260113-T1.155175-T1.262481-T1.271356-T1.286343-T1.237189-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mXDmzt/0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mXDmzt/0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/416kQIkBd-L._RC%7C41yMaiNBnnL.css,218Y6Z0tipL.css,21GWIPOCN2L.css,315GMAwkLiL.css,01Qji-D4YPL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,01DeBJ5q9YL.css,21UvDaNT8uL.css,21ByukFKG4L.css,01lYrTXt4xL.css,019a2eHDX2L.css,0121zKjk26L.css,01vUDet4b1L.css,01D-B-OeNDL.css,21CTcSQ19+L.css,21kAeBqBQHL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,01QLwk8mu6L.css,01czYle8OiL.css,11kmwdXfY5L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01xJovNL7KL.css,011uHgmxBfL.css,114HJAY+ShL.css,01MLzcotflL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,21jUQU6VhYL.css,01AT3O0C6cL.css,31YeUjpBngL.css,015FNYa5WbL.css,01g2EoxOu-L.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01zmYtfbgDL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/91txxpe1Y-L.js?AUIClients/GestaltDetailPageDesktopMetaAsset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/GestaltDetailPageDesktopMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/GestaltDetailPageDesktopMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/91txxpe1Y-L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css?AUIClients/AmazonUICalendar&amp;wmT7unlZ#not-trident" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wmT7unlZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wmT7unlZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11xqfyHx1TL._RC%7C11B3-fvRFzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71uBLQCyk2L.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;2Yik1tlc#desktop.us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.323516-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.238103-C.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.327519-T1.325013-T1.224722-T1.169593-T1.142088-C.341406-T1.250575-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="2Yik1tlc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">2Yik1tlc</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js,71uBLQCyk2L.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/51zv8e4W3TL._RC%7C218Y6Z0tipL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,114HJAY+ShL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP&amp;3NRPikY1#desktop.us.113788-C.325934-T1.261576-T1.287015-T2.310456-T1.237182-T1.337466-T1.311866-T1.211070-T1.260113-T1.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3NRPikY1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3NRPikY1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/51zv8e4W3TL._RC%7C218Y6Z0tipL.css,315GMAwkLiL.css,01Qji-D4YPL.css,01vUDet4b1L.css,01D-B-OeNDL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11iwHtffX1L.css,41IYcMQCjlL.css,21GWIPOCN2L.css,11MXghh1eBL.css,11jG57OztzL.css,31MkQHV3gaL.css,31l-Nc5zsiL.css,01FtAuFRr3L.css,11kmwdXfY5L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21DFVmWtz3L.css,01xJovNL7KL.css,011uHgmxBfL.css,01zmYtfbgDL.css,21jUQU6VhYL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,114HJAY+ShL.css,01wsp46SQTL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01-8BURvQmL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,017KStdmPkL.css,11ShMW6C8wL.css,01Y5FkF5TkL.css,0171-O+nBwL.css,11CROM+RNcL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css,31qUzWcZhtL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn&amp;dNR99psk#desktop.us.321740-T1.281042-T1.271164-T1.271151-T1.323516-T1.263677-T2.113788-C.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.325013-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP_TradeIn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dNR99psk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dNR99psk</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css,31qUzWcZhtL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41qEDBI4k-L.css?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41qEDBI4k-L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61wv0qJCUnL.js?AUIClients/DetailPageAllOffersDisplayAssets&amp;5rZ+6Yje#language-en.331965-T1.302352-T1.333153-T1.327966-T1.337680-T1.309776-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="5rZ 6Yje" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5rZ 6Yje</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61wv0qJCUnL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/311UZ9Ewv%2BL.js?AUIClients/PageRefreshAsset&amp;JL61hJ6+#321884-T1.123392-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="JL61hJ6 " elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">JL61hJ6 </stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/PageRefreshAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/PageRefreshAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/311UZ9Ewv%2BL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01j2xsQ1yML.css?AUIClients/DetailPageMetaAssetFixed&amp;aK/PDdN0#desktop.252810-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aK/PDdN0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aK/PDdN0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01j2xsQ1yML.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/41g1TctCA1L.js?AUIClients/DetailPageMiraiAssets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMiraiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMiraiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/41g1TctCA1L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;u4kikE0H#desktop.us.321740-T1.281042-T1.320845-T1.320846-T1.271164-T1.271151-T1.327990-T1.323516-T1.292695-C.328358-T1.312887-T1.140997-T1.337680-T1.327484-T1.312547-T1.239559-T1.336175-T1.238103-C.209620-T1.313746-T1.326363-T1.317281-T1.262481-T1.271356-T1.286343-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.142088-C.341406-T1.250575-T1.282422-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u4kikE0H" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u4kikE0H</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/21TMrbNilEL._RC%7C21YblE14ZTL.js,21E2aIDj6DL.js,31X6Dg1fL8L.js,4123BTTtUrL.js,41YD13pEeXL.js,31Nnd8dHj4L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61H7p1CHvFL.js,01lcH4zcTaL.js,01OtvpwikQL.js,51aW--i+VCL.js,01qwoVEkKlL.js,01g2etah0NL.js,21v7Os12mhL.js,21qOGqjcM7L.js,11wTwl+500L.js,61Vr-aucdZL.js,013eoEBTVUL.js,01YivelYW5L.js,016QFWAAdML.js,61OFdsFyvgL.js,11Gx+6S5O-L.js,41g1TctCA1L.js,51+kpt7cxwL.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,31kKc73tPXL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,011kwg0OTQL.js,014kCoIHgIL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,01sSKGYWoFL.js,0140uXMtvJL.js,01IC-gBKyYL.js,01PQKs49DyL.js,01fffmaF5CL.js,11DmbZUrH1L.js,21pSZajIKhL.js,41T696fF78L.js,11Xxd-w8V7L.js,31WJiOUHd7L.js,01q-Ep-UrEL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js?AUIClients/DetailPageDesktopImageBlockMetaAsset&amp;iG49/WCx#us.336175-T1.169593-T1.299993-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="iG49/WCx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">iG49/WCx</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61WkRdz1t9L._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js?AUIClients/InstallmentPaymentDetailPageMetaAsset&amp;hrzDuonS#us.336175-T1.215308-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/InstallmentPaymentDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/InstallmentPaymentDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hrzDuonS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrzDuonS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01B5v1tkmrL._RC%7C01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP&amp;PXHi3hTc#desktop.us.321740-T1.281042-T1.271164-T1.271151-T1.323516-T1.263677-T2.113788-C.172402-T1.317114-T1.209620-T1.133480-T1.129737-C.262481-T1.271356-T1.286343-T1.109378-T1.169593-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PXHi3hTc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PXHi3hTc</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/61H5jM7l4aL._RC%7C21GWIPOCN2L.css,315GMAwkLiL.css,01xJovNL7KL.css,419+eoM+IGL.css,21jUQU6VhYL.css,01g2EoxOu-L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31v5j8kQd3L.css,01wkbZw3FtL.css,01NW8VTUeVL.css,011uHgmxBfL.css,41oY9Jxq+tL.css,31j4n5vuY7L.css,114HJAY+ShL.css,21VgVEzltcL.css,21ZjVyQPjML.css,01OhA16ND1L.css,01V7QaYzv6L.css,41TRxv33rNL.css,01BwcPgON+L.css,41qEDBI4k-L.css,01TZ9fpDSSL.css,21pOUFVE5LL.css,01iXxkJ+wuL.css,31YeUjpBngL.css,01YXz0HO1fL.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31zn+O+ZUXL.css,01-tcA2vk0L.css,01yo7ZZNxmL.css,01AT3O0C6cL.css,01rgp7WqqpL.css,01adN84djtL.css,01+KRP2j52L.css,01lHBbKIwtL.css,01aCd87PyEL.css,01goIIPoVxL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/11EIQ5IGqaL._RC%7C012LjolmrML.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css?AUIClients/AmazonUI&amp;6dD1QcEA#us.not-trident.322290-T1.322288-T1.263677-T2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="6dD1QcEA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">6dD1QcEA</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/11EIQ5IGqaL._RC%7C012LjolmrML.css,41S24rN5PfL.css,21qPwhPKAAL.css,01Vctty9pOL.css,017DsKjNQJL.css,01L-6KXabGL.css,41EWOOlBJ9L.css,11gKzVUTNZL.css,01ElnPiDxWL.css,11bGSgD5pDL.css,01Dm5eKVxwL.css,01IdKcBuAdL.css,01y-XAlI+2L.css,01ZfXnjPmmL.css,01oDR3IULNL.css,31q1y1irc5L.css,01XPHJk60-L.css,01R0k0yxPXL.css,21xVR0NtxzL.css,11gneA3MtJL.css,21fecG8pUzL.css,01RddH8vm-L.css,01CFUgsA-YL.css,21AmhU6t0sL.css,11zGrJZ9D2L.css,11tRp6+0HHL.css,11MrdqKlKnL.css,11oHt2HYxnL.css,01-fWz3sOQL.css,11ocrgKoE-L.css,11RKoGSb-gL.css,11g1xm90ZvL.css,01QrWuRrZ-L.css,21pIv-yKhaL.css,01Wiow6micL.css,01gAR5pB+IL.css,119dKrtBoVL.css,11Y05DTEL6L.css,01cbS3UK11L.css,21F85am0yFL.css,01giMEP+djL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31rFieDgRjL.css?AUIClients/DetailPageAllOffersDisplayAssets&amp;VlCqtHx0#333153-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VlCqtHx0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VlCqtHx0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31rFieDgRjL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21t09Kpi1AL.js,31JUr01gz+L.js,316nVZ1c+gL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,21qOGqjcM7L.js,01ZF+ovNflL.js,31iuSAu5YqL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,217XOv1WjVL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP&amp;pJHB8DCT#desktop.us.327990-T1.229463-T1.292695-C.328358-T1.312885-T1.195406-C.337680-T1.327484-T1.316933-T1.290748-T1.317011-T1.315969-T1.312547-T1.287015-T2.239559-T1.306122-T1.336175-T1.123392-T1.337466-T1.284232-T1.311866-T1.245574-T1.328962-T1.290490-T1.183962-T1.324839-T1.310834-T1.184660-C.155175-T1.262481-T1.271356-T1.286343-T1.324832-T1.329810-T1.109378-T1.154031-T3.227612-T1.227610-T1.301499-T1.224722-T1.169593-T1.133003-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pJHB8DCT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pJHB8DCT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31Nb5hZQizL._RC%7C21TMrbNilEL.js,21YblE14ZTL.js,21E2aIDj6DL.js,31BIH4OUqyL.js,41r2Tff2S4L.js,01g2etah0NL.js,21KJ58XxAlL.js,219O6ZmDMOL.js,31oAl8dJC2L.js,41CZ+Voa-5L.js,41Yqep+fzEL.js,21t09Kpi1AL.js,31JUr01gz+L.js,316nVZ1c+gL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,014pViIqsvL.js,0185ITV0M6L.js,41DfHGdXUeL.js,31cYEC0kd-L.js,41Gbn3N+-PL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71EA77kZwfL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01Fy9QPljuL.js,41lkyHEebjL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,01j1Y1PFCRL.js,11+dypSOVUL.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31X6Dg1fL8L.js,21qOGqjcM7L.js,01ZF+ovNflL.js,31iuSAu5YqL.js,61Vr-aucdZL.js,013eoEBTVUL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,51+kpt7cxwL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31abTeO2myL.js,21-71xWjt2L.js,01zM73lDxwL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,41YD13pEeXL.js,019W6kk1gjL.js,01hkseOXj6L.js,01acYp41-1L.js,311A0yCIeJL.js,01iRN5bMQkL.js,51KSY3rT5PL.js,01IC-gBKyYL.js,01XEEGOr+kL.js,01PQKs49DyL.js,11DmbZUrH1L.js,21pSZajIKhL.js,31Nnd8dHj4L.js,11qajewhV-L.js,519IuGYZGpL.js,01j5DeZSMzL.js,31E0yPIOfyL.js,414RVqfRSrL.js,217XOv1WjVL.js,013aNY++XJL.js,11Qx7X6CNHL.js,011a0jbAJkL.js,018ZxeiHuPL.js,01jEIwUjmbL.js,01IA5zDheBL.js,01LR86-vYBL.js,61vHswHGUkL.js,210GcckUvlL.js,01OI0RzpxfL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31yoeTcupOL.js?AUIClients/AmazonUICalendar" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31yoeTcupOL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/01r8lpNJhRL.css?AUIClients/DetailPageDesktopTwisterMetaAsset&amp;C0ycBIP6#us" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopTwisterMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopTwisterMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="C0ycBIP6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">C0ycBIP6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/01r8lpNJhRL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/I/31kKc73tPXL.js?AUIClients/MonthlyPaymentsDetailPageAssets&amp;ARNqUd94#us.209620-T1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MonthlyPaymentsDetailPageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AUIClients/MonthlyPaymentsDetailPageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ARNqUd94" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ARNqUd94</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/I/31kKc73tPXL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/product/handle-buy-box/ref=dp_start-bbf_1_glance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ASIN</stringProp>
                  <stringProp name="Argument.value">B087LNGM9R</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">storeID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="qid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">qid</stringProp>
                  <stringProp name="Argument.value">1617136530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submit.add-to-cart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">submit.add-to-cart</stringProp>
                  <stringProp name="Argument.value">Add to Cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sellingCustomerID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sellingCustomerID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dropdown-selection-ubb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dropdown-selection-ubb</stringProp>
                  <stringProp name="Argument.value">add-new</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sourceCustomerOrgListID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sourceCustomerOrgListID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="viewID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">viewID</stringProp>
                  <stringProp name="Argument.value">glance</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctaDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctaDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isAddon" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isAddon</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dropdown-selection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dropdown-selection</stringProp>
                  <stringProp name="Argument.value">add-new</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nodeID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nodeID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">8-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tagActionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tagActionCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="usePrimeHandler" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">usePrimeHandler</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctaPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctaPageType</stringProp>
                  <stringProp name="Argument.value">detail</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quantity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quantity</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsid</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isMerchantExclusive" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isMerchantExclusive</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="merchantID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">merchantID</stringProp>
                  <stringProp name="Argument.value">A2S670BVERRBIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sourceCustomerOrgListItemID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sourceCustomerOrgListItemID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRF</stringProp>
                  <stringProp name="Argument.value">g9OiZXcYrI0xmTVGsSVU63iWx88PTflWIniVPYGlXMETAAAADAAAAABgY4ufcmF3AAAAABVX8CwXqz4nuL9RKX///w==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rebateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rebateId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="offerListingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">offerListingID</stringProp>
                  <stringProp name="Argument.value">73%2BfVpNdXOkJiTGzsdaQNHnEZc5Cb7E4UCwRDydSs0uMlVXPl6Lna4wdSdaGoNaMDgDXsH9xK0Rk3iRBU8qLx1aSeRWzDeFVL8dxx6ScW5niWtc5JRHqQgqRz3N5aVKBZWisXBU1Oo46%2BLvOXsqIS6o3uVm%2BNEugnEoJkMp0ASu9zQeopgW4O%2BCSvALf6Rxj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="wlPopCommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wlPopCommand</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/product/handle-buy-box/ref=dp_start-bbf_1_glance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">18237.0</stringProp>
              <stringProp name="ConstantTimer.delay">9118.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 18237 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://m.media-amazon.com/images/G/01/csm/showads.v2.js?adtag=csm" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="adtag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adtag</stringProp>
                  <stringProp name="Argument.value">csm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/csm/showads.v2.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/cart/ewc/compact?ie=UTF8&amp;hostPageRID=6WQ936Y37M95Y370ET4S&amp;hostPageType=ShoppingCart&amp;hostSubPageType=NewHUC&amp;storeName=generic&amp;widerCompactView=true&amp;_=1617136562196" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widerCompactView" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">widerCompactView</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostSubPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostSubPageType</stringProp>
                  <stringProp name="Argument.value">NewHUC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageType</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="storeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">storeName</stringProp>
                  <stringProp name="Argument.value">generic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ie</stringProp>
                  <stringProp name="Argument.value">UTF8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hostPageRID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hostPageRID</stringProp>
                  <stringProp name="Argument.value">6WQ936Y37M95Y370ET4S</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136562196</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/ewc/compact</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=6WQ936Y37M95Y370ET4S&amp;page-type=ShoppingCart&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136562218" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">6WQ936Y37M95Y370ET4S</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136562218</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap_global._CB485967074_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap_global._CB485967074_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/login/fwcim._CB454428048_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="add to cart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/cart/view.html/ref=lh_cart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/cart/view.html/ref=lh_cart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">11022.0</stringProp>
              <stringProp name="ConstantTimer.delay">5511</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 11022 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://completion.amazon.com/api/2017/suggestions?session-id=144-7425314-1966119&amp;customer-id=&amp;request-id=7DP3CH5WX043N2K26QCP&amp;page-type=ShoppingCart&amp;lop=en_US&amp;site-variant=desktop&amp;client-info=amazon-search-ui&amp;mid=ATVPDKIKX0DER&amp;alias=aps&amp;searchTerm=a&amp;suggestion-type=KEYWORD&amp;suggestion-type=WIDGET&amp;_=1617136573709" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client-info" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client-info</stringProp>
                  <stringProp name="Argument.value">amazon-search-ui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customer-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customer-id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page-type</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">ATVPDKIKX0DER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="alias" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alias</stringProp>
                  <stringProp name="Argument.value">aps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request-id</stringProp>
                  <stringProp name="Argument.value">7DP3CH5WX043N2K26QCP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lop</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="site-variant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">site-variant</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suggestion-type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suggestion-type</stringProp>
                  <stringProp name="Argument.value">WIDGET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="session-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">session-id</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136573709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/recent-history-footer/external/rhf-handler.html?disableRhfWeblab=&amp;search=&amp;rhfAsins=&amp;noP13NCache=&amp;weblabTriggers=&amp;auiDebug=&amp;keywords=&amp;k=&amp;rviAsins=&amp;url=&amp;parentSession=144-7425314-1966119&amp;rhfState=&amp;contextMetadataOverride=&amp;currentSubPageType=Cart&amp;field-keywords=&amp;relatedRequestId=7DP3CH5WX043N2K26QCP&amp;recsAsins=&amp;rhfHorizonteWeblab=&amp;excludeASIN=&amp;auditEnabled=&amp;customerId=&amp;testRecsFailure=&amp;previewCampaigns=&amp;forceWidgets=&amp;currentPageType=ShoppingCart&amp;stringDebug=&amp;isAUI=1&amp;cardJSPresent=false&amp;pageUrl=%2Fgp%2Fcart%2Fview.html%2Fref%3Dlh_cart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="auditEnabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auditEnabled</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">keywords</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="disableRhfWeblab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">disableRhfWeblab</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rhfAsins" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rhfAsins</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="noP13NCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noP13NCache</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="forceWidgets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceWidgets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rviAsins" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rviAsins</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="field-keywords" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">field-keywords</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPageType</stringProp>
                  <stringProp name="Argument.value">ShoppingCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentSubPageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentSubPageType</stringProp>
                  <stringProp name="Argument.value">Cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isAUI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isAUI</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="excludeASIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">excludeASIN</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="parentSession" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">parentSession</stringProp>
                  <stringProp name="Argument.value">144-7425314-1966119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="testRecsFailure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">testRecsFailure</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rhfState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rhfState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="weblabTriggers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">weblabTriggers</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="relatedRequestId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">relatedRequestId</stringProp>
                  <stringProp name="Argument.value">7DP3CH5WX043N2K26QCP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="previewCampaigns" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">previewCampaigns</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rhfHorizonteWeblab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rhfHorizonteWeblab</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cardJSPresent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cardJSPresent</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stringDebug" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stringDebug</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="recsAsins" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">recsAsins</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageUrl</stringProp>
                  <stringProp name="Argument.value">/gp/cart/view.html/ref=lh_cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auiDebug" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auiDebug</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="contextMetadataOverride" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">contextMetadataOverride</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/recent-history-footer/external/rhf-handler.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/p13n-shared/faceout-partial?asinMetadataKeys=adId%3AParentReasonId%3AParentReasonId.substitutions.purchase_date%3ArId&amp;widgetTemplateClass=PI%3A%3AP13N%3A%3AViewTemplates%3A%3ACarousel%3A%3ADesktop&amp;linkGetParameters=%7B%22pd_rd_wg%22%3A%22pUwnZ%22%2C%22pd_rd_r%22%3A%227f71ec2a-7f5a-49a2-924e-174de938929e%22%2C%22pf_rd_r%22%3A%227DP3CH5WX043N2K26QCP%22%2C%22pf_rd_p%22%3A%22d82b5538-89a1-4e66-9df9-7dd5fe63be30%22%2C%22pd_rd_w%22%3A%22mH8Mj%22%7D&amp;productDetailsTemplateClass=PI%3A%3AP13N%3A%3AViewTemplates%3A%3AProductDetails%3A%3ADesktop%3A%3AAddToCart&amp;forceFreshWin=0&amp;painterId=PersonalizationCartRecommendationsDesktopCarousel&amp;featureId=CartRecsCarousel&amp;reftagPrefix=pd_cart_crc_cko_cart_2&amp;imageHeight=135&amp;faceoutTemplateClass=PI%3A%3AP13N%3A%3AViewTemplates%3A%3AProduct%3A%3ADesktop%3A%3ACarouselFaceout&amp;imageWidth=135&amp;auiDeviceType=desktop&amp;schemaVersion=2&amp;relatedRequestID=7DP3CH5WX043N2K26QCP&amp;productDataFlavor=FaceoutAddToCart&amp;maxLineCount=1&amp;faceoutArgs=%7B%22productDetailsTemplateClass%22%3A%22PI%3A%3AP13N%3A%3AViewTemplates%3A%3AProductDetails%3A%3ADesktop%3A%3AAddToCart%22%7D&amp;count=2&amp;offset=8&amp;asins=B08L9YTLT7%3A%3A%3A%3A%2CB08NY5JZSG%3A%3A%3A%3A&amp;_=1617136574047" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="widgetTemplateClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">widgetTemplateClass</stringProp>
                  <stringProp name="Argument.value">PI::P13N::ViewTemplates::Carousel::Desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="imageWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">imageWidth</stringProp>
                  <stringProp name="Argument.value">135</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auiDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auiDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="schemaVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">schemaVersion</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="offset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">offset</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="forceFreshWin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceFreshWin</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="relatedRequestID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">relatedRequestID</stringProp>
                  <stringProp name="Argument.value">7DP3CH5WX043N2K26QCP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asinMetadataKeys" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asinMetadataKeys</stringProp>
                  <stringProp name="Argument.value">adId:ParentReasonId:ParentReasonId.substitutions.purchase_date:rId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productDetailsTemplateClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productDetailsTemplateClass</stringProp>
                  <stringProp name="Argument.value">PI::P13N::ViewTemplates::ProductDetails::Desktop::AddToCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="imageHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">imageHeight</stringProp>
                  <stringProp name="Argument.value">135</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asins" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asins</stringProp>
                  <stringProp name="Argument.value">B08L9YTLT7::::,B08NY5JZSG::::</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reftagPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reftagPrefix</stringProp>
                  <stringProp name="Argument.value">pd_cart_crc_cko_cart_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="faceoutArgs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">faceoutArgs</stringProp>
                  <stringProp name="Argument.value">{&quot;productDetailsTemplateClass&quot;:&quot;PI::P13N::ViewTemplates::ProductDetails::Desktop::AddToCart&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="linkGetParameters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">linkGetParameters</stringProp>
                  <stringProp name="Argument.value">{&quot;pd_rd_wg&quot;:&quot;pUwnZ&quot;,&quot;pd_rd_r&quot;:&quot;7f71ec2a-7f5a-49a2-924e-174de938929e&quot;,&quot;pf_rd_r&quot;:&quot;7DP3CH5WX043N2K26QCP&quot;,&quot;pf_rd_p&quot;:&quot;d82b5538-89a1-4e66-9df9-7dd5fe63be30&quot;,&quot;pd_rd_w&quot;:&quot;mH8Mj&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="faceoutTemplateClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">faceoutTemplateClass</stringProp>
                  <stringProp name="Argument.value">PI::P13N::ViewTemplates::Product::Desktop::CarouselFaceout</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="maxLineCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">maxLineCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="painterId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">painterId</stringProp>
                  <stringProp name="Argument.value">PersonalizationCartRecommendationsDesktopCarousel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="featureId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">featureId</stringProp>
                  <stringProp name="Argument.value">CartRecsCarousel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productDataFlavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productDataFlavor</stringProp>
                  <stringProp name="Argument.value">FaceoutAddToCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136574047</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/p13n-shared/faceout-partial</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap-checkout-frn._CB485972251_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/advertising/dev/js/live/adSnippet._CB485936109_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap_global-1.1._CB485931398_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/css/ap_global._CB485967074_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/css/ap_global._CB485967074_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/js/authPortal/sign-in._CB485922776_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/javascripts/lib/jquery/jquery-1.2.6.min._CB485970275_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/authportal/common/js/ap-checkout-frn._CB485979558_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/orderApplication/css/authPortal/sign-in._CB485933397_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/login/fwcim._CB454428048_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">images/G/01/x-locale/common/errors-alerts/error-styles-ssl._CB485937077_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="view cart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.amazon.com/gp/youraccount/navigation/sidepanel?rid=7DP3CH5WX043N2K26QCP&amp;_=1617136587506" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">7DP3CH5WX043N2K26QCP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1617136587506</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gp/youraccount/navigation/sidepanel</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="rtt" elementType="Header">
                  <stringProp name="Header.name">rtt</stringProp>
                  <stringProp name="Header.value">50</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="downlink" elementType="Header">
                  <stringProp name="Header.name">downlink</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="ect" elementType="Header">
                  <stringProp name="Header.name">ect</stringProp>
                  <stringProp name="Header.value">4g</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
